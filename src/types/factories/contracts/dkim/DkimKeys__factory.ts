/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DkimKeys,
  DkimKeysInterface,
} from "../../../contracts/dkim/DkimKeys";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "selector",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "exponent",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "modulus",
        type: "bytes",
      },
    ],
    name: "DeleteDKIMKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "selector",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "exponent",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "modulus",
        type: "bytes",
      },
    ],
    name: "UpdateDKIMKey",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "string",
        name: "selector",
        type: "string",
      },
    ],
    name: "getKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "string",
        name: "selector",
        type: "string",
      },
    ],
    name: "removeKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "string",
        name: "selector",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "exponent",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "modulus",
        type: "bytes",
      },
    ],
    name: "updateKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x604060808152346200104c5760008054336001600160a01b0319821681178355906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a36200005762001051565b6200006162001087565b90610100928383526020927f9edbd2293d6192a84a7b4c5c699d31f906e8b83b09b817dbcbf4bcda3c6ca02f848201527fd2a1d99f995b360f52801f79a2d40a9d31d535da1d957c44de389920198ab996868201527f377df7a009eee7764b238b42696168d1c7ecbc7e31d69bf3fcc337549dc4f01160608201527f0e070cec0b111021f0435e51db415a2940011aee0d4db4767c32a76308aae63460808201527f320642d63fe2e018e81f505e13e0765bd8f6366d0b443fa41ea8eb5c5b8aebb060a08201527f7db82fb5e10fe1d265bd61b22b6b13454f6e1273c43c08e0917cd795cc9d256360c08201527f6606145cff02c48d58d0538d96ab50620b28ad9f5aa685b528f41ef1bad24a5460e08201527f6c8bdb1707fb6ee7a2e61bbb440cd9ab6795d4c106145000c13aeeedd678b05f858201528252620001a562001051565b906003918281526201000160e81b91828683015285850191825287519268676d61696c2e636f6d60b81b80855260286029600196876009820152208b519067323032333036303160c01b825260088201522096519384519760018060401b039889811162000e86578154968888811c9816801562001041575b8c89101462000e6757908892918c601f998a811162000fec575b50508c9089831160011462000f77578891908362000f6b575b5050600019828c1b1c191690831b1781555b01905180519089821162000e865782548881811c9116801562000f60575b8c82101462000e6757908b828985941162000f0a575b50508b9088831160011462000ea657879262000e9a575b5050600019828a1b1c191690871b1790555b620002ca62001051565b620002d462001087565b8a81527fbe23c6064e1907ae147d2a96c8089c751ee5a1d872b5a7be11845056d28384cf8a8201527fb59978c4a91b4ffe90d3dec0616b3926038f27da4e4d254c8c1283bc9dcdabea8c8201527fc500fbf0e89b98d1059a7aa832893b08c9e51fcea476a69511be611250a91b6a60608201527f1204a22561bb87b79f1985a687851184533d93dfab986fc2c02830c7b12df9cf60808201527f0e3259e068b974e3f6cf99fa63744c8b5b23629a4efad425fa2b29b36224433760a08201527f3d4c389389ececc5692e0f15b54b9f49b999fd0754db41a4fc16b8236f68555f60c08201527f9546311326e56c1ea1fe858e3c66f3a1282d440e3b487579dd2c198c8b15a5ba60e08201527fb82f1516f48c4013063319c4a06789f943c5fc4e7768c2c0d4ce871c3c51a1778b8201528152602860296200041462001051565b93898552858c8601528b84019485528d51908152886009820152208c519067323031363130323560c01b8252600882015220905180519089821162000e865782548881811c9116801562000e7b575b8c82101462000e6757908b82898b9695941162000e12575b50508b9088831160011462000dab578791908362000d9f575b5050600019828b1b1c191690831b1781555b01905180519088821162000cbd5782548781811c9116801562000d94575b8b82101462000c9e5790818784931162000d41575b508a9087831160011462000cdd57869262000cd1575b505060001982891b1c191690861b1790555b6200050b62001051565b895160a081018181108982111762000cbd578b52608081527f9157daff5eb845df246f5e315144ff112ac4f7caa555ad9185620b0a2e5ffb7b898201527f14492417c804f23e9d1ce90b5a6ee5719465a85e1ad8ff9b558353d4eb14ae308b8201527f22f2ef2b25fae5e78fc37c0db1431524fefa6da783b62950694939e623caab7860608201527f73a110cff9bb848f43e58afcfcb14de54af4f1fd3939e2472c6b9514f174e95560808201528152620005c562001051565b9186835288830152878101918252602660308b516f667573656d616368696e65732e636f6d60801b8152876010820152208b519065676f6f676c6560d01b8252600682015220905180519088821162000cbd5782548781811c9116801562000cb2575b8b82101462000c9e57908187899594931162000c4c575b508a9087831160011462000be5578691908362000bd9575b5050600019828a1b1c191690831b1781555b01905180519087821162000af85782548681811c9116801562000bce575b8a82101462000ad95790818684931162000b7b575b50899086831160011462000b1857859262000b0c575b505060001982881b1c191690851b1790555b620006ce62001051565b967f518ba614390e6c3796ea37367c4f1a109646d5472e9e28e8d49e84924e648087620006fa62001087565b918083527fba85ae7e06d6c39f0c7335066ccbf5efa45ac5d64638c9109a7f0e389fc71a84898401527f3a75a95231688b6a3f0831c1c2d5cb9b271da0ce200f40754fb4561acb22c0e18b8401527fac89512364d74feea9f072894f2a88f084e09485ae9c5f961308295e1bb7e83560608401527fb87c3bc0bce0b827f8600a11e97c54291b00a07ba817b33ebfa6cc67f5f51beb60808401527fe258790197851f80943a3bc17572428aa19e4aa949091f9a436aa6e0b3e1773e60a08401527f9ca201441f07a104cce03528c3d15891a9ce03ed2a8ba40dc42e294c3d180ba560c08401527fee4488c84722ceaadb69428d2c6026cf47a592a467cc8b15a73ea3753d7f615e60e084015282015287526200081562001051565b96600488526201000160e01b87890152868101978852602560298a51687961686f6f2e636f6d60b81b8152866009820152208a5190640e6646068760db1b8252600582015220905180519087821162000af85782548681811c9116801562000aed575b8a82101462000ad957908186889594931162000a87575b50899086831160011462000a21578591908362000a15575b505060001982891b1c191690831b1781555b01965190815195861162000a015787548481811c91168015620009f6575b88821014620009e2578381116200099a575b50869286116001146200092e57949550859291908362000922575b50501b92600019911b1c19161790555b516109da9081620010a98239f35b01519350388062000904565b87815286812093969394938691601f198316915b898383106200097f575050501062000964575b50505050811b01905562000914565b01519060f884600019921b161c191690553880808062000955565b85870151895590970196948501948893509081019062000942565b8882528782208480890160051c8201928a8a10620009d8575b0160051c019085905b828110620009cc575050620008e9565b838155018590620009bc565b92508192620009b3565b634e487b7160e01b82526022600452602482fd5b90607f1690620008d7565b634e487b7160e01b81526041600452602490fd5b015190503880620008a7565b8386528a86209190601f198416875b8d82821062000a70575050908487959493921062000a57575b505050811b018155620008b9565b0151600019838b1b60f8161c1916905538808062000a49565b8385015186558b9890950194938401930162000a30565b90919280945085528985208680850160051c8201928c861062000acf575b90899695949392910160051c01905b81811062000ac357506200088f565b86815588950162000ab4565b9250819262000aa5565b634e487b7160e01b85526022600452602485fd5b90607f169062000878565b634e487b7160e01b84526041600452602484fd5b015190503880620006b2565b8486528a86208894509190601f198416875b8d82821062000b64575050841162000b4b575b505050811b019055620006c4565b0151600019838a1b60f8161c1916905538808062000b3d565b8385015186558b9790950194938401930162000b2a565b9091508385528985208680850160051c8201928c861062000bc4575b918991869594930160051c01915b82811062000bb55750506200069c565b87815585945089910162000ba5565b9250819262000b97565b90607f169062000687565b01519050388062000657565b8387528b87209190601f198416888e5b82821062000c34575050908487959493921062000c1b575b505050811b01815562000669565b0151600019838c1b60f8161c1916905538808062000c0d565b8385015186558c989095019493840193018e62000bf5565b90919280945086528a86208780850160051c8201928d861062000c94575b908a9695949392910160051c01905b81811062000c8857506200063f565b87815589950162000c79565b9250819262000c6a565b634e487b7160e01b86526022600452602486fd5b90607f169062000628565b634e487b7160e01b85526041600452602485fd5b015190503880620004ef565b8487528b87208994509190601f198416888e5b82821062000d29575050841162000d10575b505050811b01905562000501565b0151600019838b1b60f8161c1916905538808062000d02565b8385015186558c979095019493840193018e62000cf0565b9091508386528a86208780850160051c8201928d861062000d8a575b918a91869594930160051c01915b82811062000d7b575050620004d9565b8881558594508a910162000d6b565b9250819262000d5d565b90607f1690620004c4565b01519050388062000494565b8388528c88209190601f198416898f5b82821062000dfa575050908487959493921062000de1575b505050811b018155620004a6565b0151600019838d1b60f8161c1916905538808062000dd3565b8385015186558d989095019493840193018f62000dbb565b909192938095508852888289209181860160051c830193861062000e5d575b908b9695949392910160051c01905b81811062000e51578d91506200047b565b8881558a950162000e40565b9250819262000e31565b634e487b7160e01b87526022600452602487fd5b90607f169062000463565b634e487b7160e01b86526041600452602486fd5b015190503880620002ae565b8488528c88208a94509190601f198416898f5b82821062000ef2575050841162000ed9575b505050811b019055620002c0565b0151600019838c1b60f8161c1916905538808062000ecb565b8385015186558d979095019493840193018f62000eb9565b90919250848852888289209181860160051c830193861062000f56575b918b91869594930160051c01915b82811062000f4757508d915062000297565b8981558594508b910162000f35565b9250819262000f27565b90607f169062000281565b01519050388062000251565b908d91601f198416858b52838b20938b905b82821062000fc8575050908487959493921062000faf575b505050811b01815562000263565b0151600019838e1b60f8161c1916905538808062000fa1565b9192939596978291958786015181550195019301908f918d97969594939262000f89565b90919293809550895289828a209181860160051c830193861062001037575b908c9695949392910160051c01905b8181106200102b578e915062000238565b8981558b95016200101a565b925081926200100b565b97607f16976200021e565b600080fd5b60408051919082016001600160401b038111838210176200107157604052565b634e487b7160e01b600052604160045260246000fd5b6040519061012082016001600160401b03811183821017620010715760405256fe60406080815260048036101561001457600080fd5b600091823560e01c80631bd1b672146105ad5780636260f59314610274578063715018a61461020e5780637c5229b81461017a5780638da5cb5b146101505763f2fde38b1461006257600080fd5b3461014c57602036600319011261014c578135916001600160a01b0391828416809403610148576100916107c7565b83156100df57505082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b8382346101765781600319360112610176576001600160a01b0360209254169051908152f35b5080fd5b50823461020b57506101b760206101a761019336610738565b92908186519382858094519384920161077f565b810160018152030190209061081f565b906102076101dd60018351946101cc86610688565b6101d5816108de565b8652016108de565b9283602082015251926101f983519484869586528501906107a2565b9083820360208501526107a2565b0390f35b80fd5b833461020b578060031936011261020b576102276107c7565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346101765760803660031901126101765767ffffffffffffffff9280358481116105a9576102a890369083016106dc565b90602435858111610148576102c090369083016106dc565b926044358681116105a5576102d890369084016106dc565b916064358781116105a1576102f090369083016106dc565b966102f96107c7565b825161030481610688565b848152602090818101938a855285519261033d816103288b8781519384920161077f565b8501948281600197888152030190208b61081f565b925192835186811161058e579085918d6103578354610845565b96601f97888111610562575b508591888411600114610500579190836104f5575b5050600019600383901b1c191690831b1781555b0195519182519586116104e257506103a48654610845565b8381116104ac575b508092851160011461041c5750928061040b97959381938c9d98967fedf9e2429766195f461ecb8dcd3774ec4eda9ebce3c635f4b569ff7db02d2c8a9d94610411575b50501b916000199060031b1c19161790555b5194859485610896565b0390a180f35b015192508d806103ef565b9190601f949394198416868c52838c20938c905b828210610495575050917fedf9e2429766195f461ecb8dcd3774ec4eda9ebce3c635f4b569ff7db02d2c8a9b9c979593918561040b9a9896941061047c575b505050811b019055610401565b015160001960f88460031b161c191690558b808061046f565b808886978294978701518155019601940190610430565b6104d390878d52828d208580890160051c820192858a106104d9575b0160051c019061087f565b8c6103ac565b925081926104c8565b634e487b7160e01b8c526041905260248bfd5b015190503880610378565b9190601f198416858452878420935b8882821061054c5750509084879594939210610533575b505050811b01815561038c565b015160001960f88460031b161c19169055388080610526565b8385015186558c9890950194938401930161050f565b610588908584528784208a80870160051c8201928a88106104d9570160051c019061087f565b38610363565b634e487b7160e01b8d526041845260248dfd5b8680fd5b8580fd5b8380fd5b8382346101765761040b7fb7e82d57b222cf32e598b4a6771494ab231b65a114611ad2aa03d06f5d239c62916105e236610738565b9290916105ed6107c7565b80516106178451916020818188019461060781838861077f565b810160018152030190208661081f565b61067a600161066b61065c60206106458489519761063489610688565b61063d816108de565b8952016108de565b968187019788528851809381928d5192839161077f565b8101858152030190208961081f565b61067481610984565b01610984565b519051915194859485610896565b6040810190811067ffffffffffffffff8211176106a457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106a457604052565b81601f820112156107335780359067ffffffffffffffff82116106a45760405192610711601f8401601f1916602001856106ba565b8284526020838301011161073357816000926020809301838601378301015290565b600080fd5b9060406003198301126107335767ffffffffffffffff6004358181116107335783610765916004016106dc565b926024359182116107335761077c916004016106dc565b90565b60005b8381106107925750506000910152565b8181015183820152602001610782565b906020916107bb8151809281855285808601910161077f565b601f01601f1916010190565b6001600160a01b036000541633036107db57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60209061083992826040519483868095519384920161077f565b82019081520301902090565b90600182811c92168015610875575b602083101461085f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610854565b81811061088a575050565b6000815560010161087f565b926108c261077c95936108b46108d0946080885260808801906107a2565b9086820360208801526107a2565b9084820360408601526107a2565b9160608184039101526107a2565b90604051918260008254926108f284610845565b908184526001948581169081600014610961575060011461091e575b505061091c925003836106ba565b565b9093915060005260209081600020936000915b81831061094957505061091c9350820101388061090e565b85548884018501529485019487945091830191610931565b91505061091c94506020925060ff191682840152151560051b820101388061090e565b61098e8154610845565b9081610998575050565b81601f600093116001146109aa575055565b9080839182526109c9601f60208420940160051c84016001850161087f565b555556fea164736f6c6343000813000a";

type DkimKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DkimKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DkimKeys__factory extends ContractFactory {
  constructor(...args: DkimKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DkimKeys> {
    return super.deploy(overrides || {}) as Promise<DkimKeys>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DkimKeys {
    return super.attach(address) as DkimKeys;
  }
  override connect(signer: Signer): DkimKeys__factory {
    return super.connect(signer) as DkimKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DkimKeysInterface {
    return new utils.Interface(_abi) as DkimKeysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DkimKeys {
    return new Contract(address, _abi, signerOrProvider) as DkimKeys;
  }
}
