/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Secp256r1,
  Secp256r1Interface,
} from "../../../../contracts/validators/p256/Secp256r1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c3f908161001c8239f35b600080fdfe60e080604052600436101561001357600080fd5b600090813560e01c63ae7e17f01461002a57600080fd5b346100e55760603660031901126100e55767ffffffffffffffff906024358281116100e15761005d9036906004016100e9565b9290936044359182116100de5760206100d48686866100c261009e6100853660048b016100e9565b9590946100918561011c565b604036863781019061018c565b93908784019485528352604051946100b58661011c565b604036873781019061018c565b868501528352519051906004356101a2565b6040519015158152f35b80fd5b8380fd5b5080fd5b9181601f840112156101175782359167ffffffffffffffff8311610117576020838186019501011161011757565b600080fd5b6040810190811067ffffffffffffffff82111761013857604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761013857604052565b90601f8019910116810190811067ffffffffffffffff82111761013857604052565b9190826040910312610117576020823592013590565b90928315801561033a575b8015610332575b8015610308575b6102ff5780519060206101d381830193845190610364565b156102f457604051948186019082825282604088015282606088015260808701527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f60a08701527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551958660c082015260c0815261024f8161014e565b600080928192519060055afa903d156102ec573d9167ffffffffffffffff83116102d8576040519261028a601f8201601f191686018561016a565b83523d828585013e5b156102c45782828051810103126100de5750015190516102bf939291859081818909940991519061042d565b061490565b634e487b7160e01b81526001600452602490fd5b634e487b7160e01b82526041600452602482fd5b606091610293565b505050505050600090565b50505050600090565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc6325518310156101bb565b5082156101b4565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc6325518410156101ad565b600160601b63ffffffff60c01b0319908181108015906103fb575b80156103ea575b6103e2577f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b8282818080957fffffffff00000001000000000000000000000000fffffffffffffffffffffffc0991818180090908089180091490565b505050600090565b508015801561038657508215610386565b508183101561037f565b600160ff1b8114610417576000190190565b634e487b7160e01b600052601160045260246000fd5b60a0848152600160808181529690959194939160009182918891839188159081610649575b5061063b57908a9291610465878961066d565b9590968b60c09660ff88528c865b895190888212610632575061048b9082855191610652565b926104968a51610405565b8a52836104a35792610473565b50505b518103610604575050507f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5907f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2969093915b838651126105d757928d6105138c948f97948f9784519161099e565b90819392939981865261052c8c869a869c519151610652565b906105378d51610405565b8d528161054f57505050505050505b929093916104f7565b9193959a508092949699506105b2979850146000146105be57507f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5937f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2969361086d565b93929395529192610546565b6002036105ce578b938d9361086d565b89938b9361086d565b509950505098945050505050600160601b63ffffffff60c01b031993506105ff915051610b6c565b900990565b6002810361061a575050508690889093916104f7565b91939092916002190161054657879350869250610546565b935050506104a6565b995097505050505050505090565b90501538610452565b91906002600192841c831b16921c1681018091116104175790565b8015806106db575b6106935761068f91610686916106e3565b92919091610b1e565b9091565b50507f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296907f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f590565b508115610675565b9190821580610865575b1561073f57507f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29691507f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5906001908190565b7fb01cbd1c01e58065711814b583f061e9d431cca994cea1313449bf97c840ae0a91600160601b63ffffffff60c01b0319808481600186090894817f94e82e0c1ed3bdb90743191a9c5bbf0d88fc827fd214cc5f0b5ec6ba27673d69816001840908938415610836575050808084800993840994818460010994828088600109957f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29609918784038481116104175784908180867bfffffffeffffffffffffffffffffffff00000000000000000000000219099181858009080897888503858111610417578580949281930994080908935b93929190565b935093505092156000146108565761084d91610a5e565b91939092610830565b50506000806000926000610830565b5080156106ed565b91949592939095811580610996575b156108ac5750508315806108a4575b6108955793929190565b50600093508392508291508190565b50821561088b565b8591929495158061098e575b61097e57600160601b63ffffffff60c01b0319968703918783116104175787838189850908938689038981116104175789908184840908928315610963575050818880959493928180848196099b8c9485099b8c920999099609918784038481116104175784908180867bfffffffeffffffffffffffffffffffff00000000000000000000000219099181858009080897888503858111610417578580949281930994080908929190565b96509650505050909350156000146108565761084d91610a5e565b9550509150915091906001908190565b5085156108b8565b50801561087c565b939092821580610a56575b61089557600160601b63ffffffff60c01b0319908185600209948280878009809709948380888a0998818080808680097fffffffff00000001000000000000000000000000fffffffffffffffffffffffc099280096003090884808a7bfffffffeffffffffffffffffffffffff0000000000000000000000021909818380090898898603918683116104175788870390878211610417578780969481809681950994089009089609930990565b5080156109a9565b919091801580610b16575b610b0957600160601b63ffffffff60c01b031990818460020991808084800980940991817fffffffff00000001000000000000000000000000fffffffffffffffffffffffc81808088860994800960030908958280837bfffffffeffffffffffffffffffffffff00000000000000000000000219098189800908968784039184831161041757858503928584116104175785809492819309940890090892565b5060009150819081908190565b508215610a69565b909392821580610b64575b610b5757610b3690610b6c565b918291600160601b63ffffffff60c01b031980809581940980099009930990565b5050509050600090600090565b508015610b29565b604051906020918281019183835283604083015283606083015260808201527bfffffffeffffffffffffffffffffffff0000000000000000000000021960a0820152600160601b63ffffffff60c01b031960c082015260c08152610bcf8161014e565b600080928192519060055afa903d15610c2a573d9167ffffffffffffffff83116102d85760405192610c0a601f8201601f191686018561016a565b83523d828585013e5b156102c45782828051810103126100de5750015190565b606091610c1356fea164736f6c6343000813000a";

type Secp256r1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Secp256r1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Secp256r1__factory extends ContractFactory {
  constructor(...args: Secp256r1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Secp256r1> {
    return super.deploy(overrides || {}) as Promise<Secp256r1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Secp256r1 {
    return super.attach(address) as Secp256r1;
  }
  override connect(signer: Signer): Secp256r1__factory {
    return super.connect(signer) as Secp256r1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Secp256r1Interface {
    return new utils.Interface(_abi) as Secp256r1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Secp256r1 {
    return new Contract(address, _abi, signerOrProvider) as Secp256r1;
  }
}
