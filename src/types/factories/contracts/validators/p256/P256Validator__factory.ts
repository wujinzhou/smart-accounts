/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  P256Validator,
  P256ValidatorInterface,
} from "../../../../contracts/validators/p256/P256Validator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldPk",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newPk",
        type: "bytes",
      },
    ],
    name: "PkChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461007157601f61091a38819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b03811681036100715760805260405161088d908161008d823960805181818161027601526107520152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461046b575081630c9595561461029a5781638abf6077146102565781639356375c1461020b578163971604c6146101b95781639ea9bd591461017f578163a3f4df7e14610122578163a4a1edb1146100eb575063ffa1ad741461008857600080fd5b346100e757816003193601126100e75780516100e3916100a782610524565b600582527f302e302e31000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610641565b0390f35b5080fd5b839060203660031901126100e757803567ffffffffffffffff811161011e5761011792503691016104a1565b505061083b565b8280fd5b5050346100e757816003193601126100e75780516100e39161014382610524565b600e82527f503235362056616c696461746f72000000000000000000000000000000000000602083015251918291602083526020830190610641565b9190503461011e573660031901126100e7576101996104d4565b5060243567ffffffffffffffff811161011e5761011792503691016104a1565b9050606036600319011261011e576101cf6104d4565b926044359067ffffffffffffffff82116102085750926101f7610201926020953691016104a1565b9160243590610687565b9051908152f35b80fd5b5050346100e75760203660031901126100e757610243816100e3936001600160a01b036102366104d4565b1681528060205220610578565b9051918291602083526020830190610641565b5050346100e757816003193601126100e757602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b83836020928360031936011261011e5767ffffffffffffffff918135838111610467576102ca90369084016104a1565b90933386528587526102dd838720610578565b9333875286885283872091831161045457506102f981546104ea565b601f8111610411575b5085601f8311600114610388579186979181610377947f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb06698999161037d575b508260011b906000198460031b1c19161790555b6103688451958587968752860190610641565b91848303908501523396610666565b0390a280f35b90508801358a610341565b81875287872090601f198416885b8181106103fa5750917f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb0669798999391856103779694106103e0575b5050600182811b019055610355565b890135600019600385901b60f8161c1916905589806103d1565b91928a60018192868c013581550194019201610396565b818752878720601f840160051c81019189851061044a575b601f0160051c01905b81811061043f5750610302565b878155600101610432565b9091508190610429565b634e487b7160e01b875260419052602486fd5b8480fd5b84913461011e57602036600319011261011e573563ffffffff60e01b811680910361011e57631431782f60e31b14815260209150f35b9181601f840112156104cf5782359167ffffffffffffffff83116104cf57602083818601950101116104cf57565b600080fd5b600435906001600160a01b03821682036104cf57565b90600182811c9216801561051a575b602083101461050457565b634e487b7160e01b600052602260045260246000fd5b91607f16916104f9565b6040810190811067ffffffffffffffff82111761054057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761054057604052565b906040519182600082549261058c846104ea565b9081845260019485811690816000146105fb57506001146105b8575b50506105b692500383610556565b565b9093915060005260209081600020936000915b8183106105e35750506105b6935082010138806105a8565b855488840185015294850194879450918301916105cb565b9150506105b694506020925060ff191682840152151560051b82010138806105a8565b60005b8381106106315750506000910152565b8181015183820152602001610621565b9060209161065a8151809281855285808601910161061e565b601f01601f1916010190565b908060209392818452848401376000828201840152601f01601f1916010190565b92919091604091825194602086818098019687528181526106a781610524565b6106b886519788925192839161061e565b8660009788928101039060025afa1561082e57859182918651916001600160a01b03809216885287845261070e878920918851978895630ae7e17f60e41b87526004870152606060248701526064860191610666565b906003198483030160448501528891815491610729836104ea565b928383528660019d8e8316928360001461080e575050506001146107d2575b50505082809103917f0000000000000000000000000000000000000000000000000000000000000000165afa9283156107c957508392610792575b505061078d575090565b905090565b90809250813d83116107c2575b6107a98183610556565b810103126100e7575180151581036100e7573880610783565b503d61079f565b513d85823e3d90fd5b909192508952848920918a8a935b8285106107f557505050018301828038610748565b805484860189015288978a9750909401938c91016107e0565b9196509392508594915060ff191683830152151560051b01019138610748565b50505051903d90823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fdfea164736f6c6343000813000a";

type P256ValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: P256ValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class P256Validator__factory extends ContractFactory {
  constructor(...args: P256ValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<P256Validator> {
    return super.deploy(_impl, overrides || {}) as Promise<P256Validator>;
  }
  override getDeployTransaction(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, overrides || {});
  }
  override attach(address: string): P256Validator {
    return super.attach(address) as P256Validator;
  }
  override connect(signer: Signer): P256Validator__factory {
    return super.connect(signer) as P256Validator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): P256ValidatorInterface {
    return new utils.Interface(_abi) as P256ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): P256Validator {
    return new Contract(address, _abi, signerOrProvider) as P256Validator;
  }
}
