/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  P256Validator,
  P256ValidatorInterface,
} from "../../../../contracts/validators/p256/P256Validator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldPk",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newPk",
        type: "bytes",
      },
    ],
    name: "PkChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461007157601f6108dd38819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b038116810361007157608052604051610850908161008d823960805181818161027e015261075a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610473575081630c959556146102a25781638abf60771461025e5781639356375c14610213578163971604c6146101c05781639ea9bd591461013c57508063a3f4df7e146100e05763ffa1ad741461007d57600080fd5b346100dc57816003193601126100dc5780516100d89161009c8261052c565b600582527f302e302e31000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610649565b0390f35b5080fd5b50346100dc57816003193601126100dc5780516100d8916101008261052c565b600e82527f503235362056616c696461746f72000000000000000000000000000000000000602083015251918291602083526020830190610649565b905082346101bd57826003193601126101bd576101576104dc565b506024359067ffffffffffffffff82116101bd575060649261017e602092369085016104a9565b50505162461bcd60e51b815291820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152fd5b80fd5b9050606036600319011261020f576101d66104dc565b926044359067ffffffffffffffff82116101bd5750926101fe610208926020953691016104a9565b916024359061068f565b9051908152f35b8280fd5b5050346100dc5760203660031901126100dc5761024b816100d8936001600160a01b0361023e6104dc565b1681528060205220610580565b9051918291602083526020830190610649565b5050346100dc57816003193601126100dc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b83836020928360031936011261020f5767ffffffffffffffff91813583811161046f576102d290369084016104a9565b90933386528587526102e5838720610580565b9333875286885283872091831161045c575061030181546104f2565b601f8111610419575b5085601f831160011461039057918697918161037f947f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066989991610385575b508260011b906000198460031b1c19161790555b6103708451958587968752860190610649565b9184830390850152339661066e565b0390a280f35b90508801358a610349565b81875287872090601f198416885b8181106104025750917f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb06697989993918561037f9694106103e8575b5050600182811b01905561035d565b890135600019600385901b60f8161c1916905589806103d9565b91928a60018192868c01358155019401920161039e565b818752878720601f840160051c810191898510610452575b601f0160051c01905b818110610447575061030a565b87815560010161043a565b9091508190610431565b634e487b7160e01b875260419052602486fd5b8480fd5b84913461020f57602036600319011261020f573563ffffffff60e01b811680910361020f5763052a2cc960e01b14815260209150f35b9181601f840112156104d75782359167ffffffffffffffff83116104d757602083818601950101116104d757565b600080fd5b600435906001600160a01b03821682036104d757565b90600182811c92168015610522575b602083101461050c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610501565b6040810190811067ffffffffffffffff82111761054857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761054857604052565b9060405191826000825492610594846104f2565b90818452600194858116908160001461060357506001146105c0575b50506105be9250038361055e565b565b9093915060005260209081600020936000915b8183106105eb5750506105be935082010138806105b0565b855488840185015294850194879450918301916105d3565b9150506105be94506020925060ff191682840152151560051b82010138806105b0565b60005b8381106106395750506000910152565b8181015183820152602001610629565b9060209161066281518092818552858086019101610626565b601f01601f1916010190565b908060209392818452848401376000828201840152601f01601f1916010190565b92919091604091825194602086818098019687528181526106af8161052c565b6106c0865197889251928391610626565b8660009788928101039060025afa1561083657859182918651916001600160a01b038092168852878452610716878920918851978895630ae7e17f60e41b8752600487015260606024870152606486019161066e565b906003198483030160448501528891815491610731836104f2565b928383528660019d8e83169283600014610816575050506001146107da575b50505082809103917f0000000000000000000000000000000000000000000000000000000000000000165afa9283156107d15750839261079a575b5050610795575090565b905090565b90809250813d83116107ca575b6107b1818361055e565b810103126100dc575180151581036100dc57388061078b565b503d6107a7565b513d85823e3d90fd5b909192508952848920918a8a935b8285106107fd57505050018301828038610750565b805484860189015288978a9750909401938c91016107e8565b9196509392508594915060ff191683830152151560051b01019138610750565b50505051903d90823e3d90fdfea164736f6c6343000813000a";

type P256ValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: P256ValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class P256Validator__factory extends ContractFactory {
  constructor(...args: P256ValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<P256Validator> {
    return super.deploy(_impl, overrides || {}) as Promise<P256Validator>;
  }
  override getDeployTransaction(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, overrides || {});
  }
  override attach(address: string): P256Validator {
    return super.attach(address) as P256Validator;
  }
  override connect(signer: Signer): P256Validator__factory {
    return super.connect(signer) as P256Validator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): P256ValidatorInterface {
    return new utils.Interface(_abi) as P256ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): P256Validator {
    return new Contract(address, _abi, signerOrProvider) as P256Validator;
  }
}
