/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidator,
  WebauthnValidatorInterface,
} from "../../../../contracts/validators/p256/WebauthnValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyId",
        type: "string",
      },
    ],
    name: "PkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "bindEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009a57601f61218538819003918201601f19168301916001600160401b0383118484101761009f57808492604094855283398101031261009a5780516001600160a01b0391828216820361009a5760200151918216820361009a5760805260a0526040516120cf90816100b682396080518181816107d401528181610d72015261136f015260a0518181816103ac0152611ba60152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101275780630c959556146101225780632b7ac3f31461011d5780632ecb20d3146101185780633ba3a0171461011357806349bcad0a1461010e5780637c2ad0f1146101095780638abf6077146101045780638e7e34d7146100ff578063971604c6146100fa5780639ea9bd59146100f5578063a17f619c146100f0578063a3f4df7e146100eb578063a4a1edb1146100e6578063a5a4173f146100e1578063cb2da07c146100dc5763ffa1ad74146100d757600080fd5b610ac0565b610a78565b610a47565b6109f4565b610996565b61091b565b610898565b610848565b6107f8565b6107b4565b610712565b61056b565b610509565b6103d0565b61038c565b6101c3565b346101615760203660031901126101615760043563ffffffff60e01b811680910361016157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101615782359167ffffffffffffffff8311610161576020838186019501011161016157565b6020600319820112610161576004359067ffffffffffffffff8211610161576101bf91600401610166565b9091565b6101cc36610194565b81016060828203126101615767ffffffffffffffff91803583811161016157826101f79183016104c2565b906020908181013585811161016157846102129183016104c2565b60408201359186831161016157610256956102389361023192016104c2565b9333611fbf565b600093338552600180835261025d6040872060405196878092610643565b0386610463565b33865280835260408620928451928311610387576102858361027f8654610609565b86611112565b80601f84116001146102f457509180806102e395937f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db97958a936102e9575b501b916000199060031b1c19161790555b60405191829133958361209d565b0390a280f35b8601519250386102c4565b90601f93929319831661030c86600052602060002090565b9289905b8282106103705750509183916102e396947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db98969410610357575b5050811b0190556102d5565b85015160001960f88460031b161c19169055388061034b565b808785968294968c01518155019501930190610310565b610415565b346101615760003660031901126101615760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101615760203660031901126101615760043560ff81168103610161576103f9602091611dd3565b60ff60405191168152f35b6001600160a01b0381160361016157565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761038757604052565b6080810190811067ffffffffffffffff82111761038757604052565b90601f8019910116810190811067ffffffffffffffff82111761038757604052565b60405190610160820182811067ffffffffffffffff82111761038757604052565b67ffffffffffffffff811161038757601f01601f191660200190565b81601f82011215610161578035906104d9826104a6565b926104e76040519485610463565b8284526020838301011161016157816000926020809301838601378301015290565b346101615760a036600319011261016157610525602435610404565b60443561053181610404565b60843567ffffffffffffffff8111610161576020916105576105619236906004016104c2565b9060643590611cb6565b6040519015158152f35b34610161576020366003190112610161576001600160a01b0360043561059081610404565b1660005260026020526020604060002054604051908152f35b60005b8381106105bc5750506000910152565b81810151838201526020016105ac565b906105df602092828151948592016105a9565b0190565b6020906105fd9282604051948386809551938492016105a9565b82019081520301902090565b90600182811c92168015610639575b602083101461062357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610618565b906000929180549161065483610609565b9182825260019384811690816000146106b65750600114610676575b50505050565b90919394506000526020928360002092846000945b8386106106a2575050505001019038808080610670565b80548587018301529401938590820161068b565b9294505050602093945060ff191683830152151560051b01019038808080610670565b906020916106f2815180928185528580860191016105a9565b601f01601f1916010190565b90602061070f9281815201906106d9565b90565b346101615760403660031901126101615760043561072f81610404565b6024359067ffffffffffffffff8211610161576107a4610788602061079d936001600160a01b036107676107b09736906004016104c2565b911660005260008252604060002082604051948386809551938492016105a9565b82019081520301902060405192838092610643565b0382610463565b604051918291826106fe565b0390f35b346101615760003660031901126101615760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101615760203660031901126101615760043567ffffffffffffffff81116101615761083461082f6107b09236906004016104c2565b611ede565b6040519182916020835260208301906106d9565b60603660031901126101615760043561086081610404565b60443567ffffffffffffffff811161016157602091610886610890923690600401610166565b9160243590610ca3565b604051908152f35b34610161576040366003190112610161576108b4600435610404565b60243567ffffffffffffffff8111610161576108d4903690600401610166565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101615760403660031901126101615767ffffffffffffffff6004358181116101615761094d9036906004016104c2565b906024359081116101615760209161096c6105619236906004016104c2565b90611a0f565b604051906020820182811067ffffffffffffffff8211176103875760405260008252565b34610161576000366003190112610161576107b06040516109b68161042b565b601281527f576562617574686e2056616c696461746f72000000000000000000000000000060208201526040519182916020835260208301906106d9565b6109fd36610194565b8101906040818303126101615767ffffffffffffffff9080358281116101615783610a299183016104c2565b906020810135928311610161576020936105619361096c92016104c2565b6020610561610a5536610194565b90611235565b90610a76610a6f9260405193848092610643565b0383610463565b565b34610161576020366003190112610161576001600160a01b03600435610a9d81610404565b1660005260016020526107b061079d610834604060002060405192838092610643565b34610161576000366003190112610161576107b0604051610ae08161042b565b600581527f302e302e3100000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906106d9565b9060a0828203126101615767ffffffffffffffff82358181116101615782610b479185016104c2565b9360208401358281116101615783610b609186016104c2565b9360408101358381116101615784610b799183016104c2565b9360608201358481116101615781610b929184016104c2565b9360808301359081116101615761070f92016104c2565b9060405191602083015260208252610a768261042b565b610a76919392936040519485918351610be1816020968780880191016105a9565b8301610bf5825180938780850191016105a9565b01610c08825180938680850191016105a9565b01038085520183610463565b6040513d6000823e3d90fd5b6040610a769193929381519481610c418793518092602080870191016105a9565b8201906020820152036020810185520183610463565b5190811515820361016157565b908160209103126101615761070f90610c57565b91610c959061070f949284526060602085015260608401906106d9565b916040818403910152610643565b9190610cd2610cbb610ccc93610cc796810190610b1e565b96919298909395610ba9565b610f22565b90610bc0565b936020604051958680610ce86000998a946105cc565b039060025afa15610ddb5784610d11610d05602093835190610c20565b604051918280926105cc565b039060025afa15610ddb57610d47602092610d418651956001600160a01b03166000526000602052604060002090565b906105e3565b92610d666040519485938493630ae7e17f60e41b855260048501610c78565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610ddb578291610dad575b5061070f5750600190565b610dce915060203d8111610dd4575b610dc68183610463565b810190610c64565b38610da2565b503d610dbc565b610c14565b604051906060820182811067ffffffffffffffff82111761038757604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b9180830460081490151715610e7c57565b610e50565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610e7c57565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610e7c57565b6000198114610e7c5760010190565b90610efa826104a6565b610f076040519182610463565b8281528092610f18601f19916104a6565b0190602036910137565b805115610fcb57610f31610de0565b610f57610f48610f418451610e66565b6006900490565b835160069006610fbd57610ef0565b91602083019181805101925b838310610f71575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301610f63565b610fc690610ee1565b610ef0565b5061070f610972565b91606083830312610161578235610fea81610404565b9267ffffffffffffffff926020820135848111610161578161100d9184016104c2565b9360408301359081116101615761070f92016104c2565b81601f8201121561016157805161103a816104a6565b926110486040519485610463565b818452602082840101116101615761070f91602080850191016105a9565b9060a08282031261016157815167ffffffffffffffff908181116101615782611090918501611024565b93602084015182811161016157836110a9918601611024565b93604081015183811161016157846110c2918301611024565b93606082015184811161016157816110db918401611024565b9360808301519081116101615761070f9201611024565b6040906001600160a01b0361070f949316815281602082015201906106d9565b90601f811161112057505050565b600091825260208220906020601f850160051c8301941061115c575b601f0160051c01915b82811061115157505050565b818155600101611145565b909250829061113c565b919091825167ffffffffffffffff81116103875761118e816111888454610609565b84611112565b602080601f83116001146111ca5750819293946000926111bf575b50508160011b916000199060031b1c1916179055565b0151905038806111a9565b90601f198316956111e085600052602060002090565b926000905b88821061121d57505083600195969710611204575b505050811b019055565b015160001960f88460031b161c191690553880806111fa565b806001859682949686015181550195019301906111e5565b61124191810190610fd4565b6001600160a01b038093169061129561129161128061127b611276866001600160a01b03166000526001602052604060002090565b610a5b565b611438565b61128b61127b610972565b9061146a565b1590565b6113f3576112e8936112b1602092838082518301019101611066565b929891610ccc610cc7898b6112e08b6112d2604051938492830195866110f2565b03601f198101835282610463565b519020610ba9565b96846040519889806112fd60009c8d946105cc565b039060025afa15610ddb5787611319610d058793835190610c20565b039060025afa15610ddb5761136b92849261134d895193610d41896001600160a01b03166000526000602052604060002090565b604051630ae7e17f60e41b8152958694859384939160048501610c78565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa918215610ddb5785926113d6575b50506113aa57505090565b6113d192506113cc906001600160a01b03166000526001602052604060002090565b611166565b600190565b6113ec9250803d10610dd457610dc68183610463565b388061139f565b60405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420656d61696c206e6f7420656d7074790000000000000000006044820152606490fd5b600060206040516114488161042b565b828152015260208151916040519261145f8461042b565b835201602082015290565b90611291916114e2565b9060208201809211610e7c57565b9060018201809211610e7c57565b91908201809211610e7c57565b6020039060208211610e7c57565b600019810191908211610e7c57565b60ff8111610e7c576001901b90565b81810392916000138015828513169184121617610e7c57565b919082519281518481106115a0575b506020808201519481840151906000965b81881061151c575050505061070f929350519051906114c9565b805183519081810361154d575b505061154061153a61154692611474565b93611474565b97611474565b9691611502565b60001986851061156f575b918216911681811461152957039750505050505050565b5061159a61159561159061158b8d6115868961149d565b611490565b610e81565b6114ba565b6114ab565b19611558565b9350386114f1565b9080601f830112156101615781519067ffffffffffffffff92838311610387578260051b604051946020946115df86840188610463565b865284808701928401019380851161016157858401925b858410611607575050505050505090565b8351838111610161578791611621848480948a0101611024565b8152019301926115f6565b9060208282031261016157815167ffffffffffffffff92838211610161570190608082820312610161576040519261166384610447565b825184526020830151818111610161578261167f9185016115a8565b60208501526040830151818111610161578261169c9185016115a8565b60408501526060830151908111610161576116b79201611024565b606082015290565b9060208282031261016157815167ffffffffffffffff81116101615761070f9201611024565b90815180825260208092019182818360051b85019501936000915b8483106117105750505050505090565b909192939495848061172a83856001950387528a516106d9565b9801930193019194939290611700565b61070f9181518152606061177261176060208501516080602086015260808501906116e5565b604085015184820360408601526116e5565b9201519060608184039101526106d9565b6117956040928383528383019061173a565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b9160c0838303126101615782519260208101516117e881610404565b9260408201516117f781610404565b9260608301519260808101519267ffffffffffffffff938481116101615781611821918401611024565b9360a08301519081116101615761070f9201611024565b90602061070f92818152019061173a565b91906040838203126101615782519067ffffffffffffffff91828111610161578401610160818303126101615761187e610485565b9080518481116101615783611894918301611024565b8252602081015184811161016157836118ae918301611024565b6020830152604081015184811161016157836118cb918301611024565b6040830152606081015184811161016157836118e8918301611024565b606083015260808101518481116101615783611905918301611024565b608083015260a08101518481116101615783611922918301611024565b60a083015260c0810151848111610161578361193f918301611024565b60c083015260e0810151848111610161578361195c918301611024565b60e083015261010080820151858111610161578461197b918401611024565b90830152610120808201519485116101615761199e60209461070f968401611024565b9083015261014080910151908201529301610c57565b939061070f95936119e5611a01946119d76119f39460a08a5260a08a01906106d9565b9088820360208a01526106d9565b9086820360408801526106d9565b9084820360608601526106d9565b9160808184039101526106d9565b9073__$7b3844f6754ed06fcfc8de6867124591dd$__90604080519063178c5b1b60e31b8252600091828180611a4887600483016106fe565b0381885af4908115610ddb578391611c94575b508151630793e63d60e51b8152838180611a788560048301611783565b0381895af48015610ddb57611ada918591611c7a575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb611ac8611abc83611ede565b928651918291826106fe565b0390a1602080825183010191016117cc565b9a94509792509790936001600160a01b0380951698865163bf38fd3760e01b8152888180611b0b8660048301611838565b0381875af48015610ddb57611b2c92611291928b92611c56575b508c611cb6565b611c4957611b58959493929160608892015190865180809981946262e82960e51b8352600483016106fe565b03915af48015610ddb5786958791611c21575b5015611c1557906020939291611ba286519460e0818901519801519051978896879586956372d1e02160e11b8752600487016119b4565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610ddb578291611bf7575b5015611bf057506113d192611beb9183611fbf565b611d18565b9250505090565b611c0f915060203d8111610dd457610dc68183610463565b38611bd6565b50505050509250505090565b9050611c409195503d8088833e611c388183610463565b810190611849565b94909438611b6b565b5050505050509250505090565b611c739192503d808d833e611c6b8183610463565b8101906116bf565b9038611b25565b611c8e91503d8087833e611c6b8183610463565b38611a8e565b611cb091503d8085833e611ca88183610463565b81019061162c565b38611a5b565b6001600160a01b0316600052600260205260406000205403611d1257611d04906001602052611cfe611cf861079d61127b604060002060405192838092610643565b91611438565b906114e2565b611d0d57600190565b600090565b50600090565b6001600160a01b03168060005260026020526040600020805490611d3b82610ee1565b905560018101809111610e7c5760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff8211610e7c57565b60ff6060199116019060ff8211610e7c57565b60ff6040199116019060ff8211610e7c57565b60ff16600a019060ff8211610e7c57565b9060ff8091169116019060ff8211610e7c57565b60f881901b6001600160f81b031916600360fc1b81101580611ea9575b611e9f57606160f81b81101580611e91575b611e7f57604160f81b8110159081611e70575b50611e5f5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b611e6b61070f91611dae565b611d9b565b602360f91b1015905038611e15565b50611e8c61070f91611dae565b611d88565b50603360f91b811115611e02565b5061070f90611d75565b50603960f81b811115611df0565b908151811015611ec8570160200190565b634e487b7160e01b600052603260045260246000fd5b80519060019182811661016157611ef690831c610ef0565b9160009182825b611f09575b5050505090565b8151831c811015611fba57611f32611f29611f2383610eb1565b84611eb7565b5160f81c611dd3565b60041b610ff060f0821691168103610e7c5781611fa2611f92611fb493611f8c611f87611f81611f73611f6d611f688d9b610eb1565b611482565b8b611eb7565b516001600160f81b03191690565b60f81c90565b611dd3565b90611dbf565b60f81b6001600160f81b03191690565b861a611fae8289611eb7565b53610ee1565b90611efd565b611f02565b906001600160a01b038216928360005260006020526120016040600020602060405180928551611ff28184868a016105a9565b82019081520301902054610609565b612058576107a4612053926113cc61204d7fd102644d5b7d31da8e6f7217f7e7b2eda07e294b7ee2075ffa0d2e2c9c91c314966001600160a01b03166000526000602052604060002090565b846105e3565b0390a2565b60405162461bcd60e51b815260206004820152600d60248201527f6475706c6963617465206b6579000000000000000000000000000000000000006044820152606490fd5b90916120b461070f936040845260408401906106d9565b9160208184039101526106d956fea164736f6c6343000813000a";

type WebauthnValidatorConstructorParams =
  | [linkLibraryAddresses: WebauthnValidatorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidator__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidator> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidator>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidator {
    return super.attach(address) as WebauthnValidator;
  }
  override connect(signer: Signer): WebauthnValidator__factory {
    return super.connect(signer) as WebauthnValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorInterface {
    return new utils.Interface(_abi) as WebauthnValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidator {
    return new Contract(address, _abi, signerOrProvider) as WebauthnValidator;
  }
}

export interface WebauthnValidatorLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
