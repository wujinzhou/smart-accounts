/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidator,
  WebauthnValidatorInterface,
} from "../../../../contracts/validators/p256/WebauthnValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldPk",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newPk",
        type: "bytes",
      },
    ],
    name: "PkChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461007157601f610cf538819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b038116810361007157608052604051610c68908161008d823960805181818161027e01526109480152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461047a575081630c959556146102a25781638abf60771461025e5781639356375c14610213578163971604c6146101c05781639ea9bd591461013c57508063a3f4df7e146100e05763ffa1ad741461007d57600080fd5b346100dc57816003193601126100dc5780516100d89161009c82610533565b600582527f302e302e31000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610650565b0390f35b5080fd5b50346100dc57816003193601126100dc5780516100d89161010082610533565b601282527f576562617574686e2056616c696461746f720000000000000000000000000000602083015251918291602083526020830190610650565b905082346101bd57826003193601126101bd576101576104e3565b506024359067ffffffffffffffff82116101bd575060649261017e602092369085016104b0565b50505162461bcd60e51b815291820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152fd5b80fd5b9050606036600319011261020f576101d66104e3565b926044359067ffffffffffffffff82116101bd5750926101fe610208926020953691016104b0565b91602435906106d8565b9051908152f35b8280fd5b5050346100dc5760203660031901126100dc5761024b816100d8936001600160a01b0361023e6104e3565b1681528060205220610587565b9051918291602083526020830190610650565b5050346100dc57816003193601126100dc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b83836020928360031936011261020f5767ffffffffffffffff938135858111610476576102d290369084016104b0565b93903386528583526102e5828720610587565b93338752868452828720978611610463575061030187546104f9565b601f8111610420575b508596601f861160011461039f578587987f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066979891610394575b508760011b906000198960031b1c19161790555b8561036c8351958487958652850190610650565b91838303858501528183528483013780860183018790523395601f01601f191601030190a280f35b905082013589610344565b808752838720601f19871698885b8a81106104095750877f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb06698999a106103ef575b5050600187811b019055610358565b83013560001960038a901b60f8161c1916905588806103e0565b9091866001819285880135815501930191016103ad565b878752838720601f870160051c810191858810610459575b601f0160051c01905b81811061044e575061030a565b878155600101610441565b9091508190610438565b634e487b7160e01b875260419052602486fd5b8480fd5b84913461020f57602036600319011261020f573563ffffffff60e01b811680910361020f5763052a2cc960e01b14815260209150f35b9181601f840112156104de5782359167ffffffffffffffff83116104de57602083818601950101116104de57565b600080fd5b600435906001600160a01b03821682036104de57565b90600182811c92168015610529575b602083101461051357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610508565b6040810190811067ffffffffffffffff82111761054f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761054f57604052565b906040519182600082549261059b846104f9565b90818452600194858116908160001461060a57506001146105c7575b50506105c592500383610565565b565b9093915060005260209081600020936000915b8183106105f25750506105c5935082010138806105b7565b855488840185015294850194879450918301916105da565b9150506105c594506020925060ff191682840152151560051b82010138806105b7565b60005b8381106106405750506000910152565b8181015183820152602001610630565b906020916106698151809281855285808601910161062d565b601f01601f1916010190565b67ffffffffffffffff811161054f57601f01601f191660200190565b81601f820112156104de578035906106a882610675565b926106b66040519485610565565b828452602083830101116104de57816000926020809301838601378301015290565b939291909181016080828203126104de5767ffffffffffffffff9282358481116104de5782610708918501610691565b90602094858501358181116104de5784610723918701610691565b91604095868101358381116104de578661073e918301610691565b9560608201359384116104de576107796107608a959286936107c59501610691565b938951908382015282815261077481610533565b610aa4565b8851938491836107928185019b8c81519384920161062d565b83016107a68251809387808501910161062d565b016107b98251809386808501910161062d565b01038084520182610565565b6107d686519586925192839161062d565b8460009586928101039060025afa15610a3257826108318692825161082188805180938861080d818401978881519384920161062d565b820190898201520387810184520182610565565b875192839283925192839161062d565b8101039060025afa15610a985783809596835190610881865161085381610533565b601b81527f2b2b2b2b2b76616c69646174655369676e61747572652b2b2b2b2b000000000085820152610c1a565b84808751858101906305f3bfab60e11b82528660248201526108b8816108aa604482018b610650565b03601f198101835282610565565b51906a636f6e736f6c652e6c6f675afa506001600160a01b0380911685528483528585206109048751958694630ae7e17f60e41b86526004860152606060248601526064850190610650565b90600319848303016044850152869181549161091f836104f9565b928383528660019d8e83169283600014610a7857505050600114610a3c575b50505082809103917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610a325782916109fc575b506109bd5750516109ba917f5349475f56414c49444154494f4e5f4641494c45440000000000000000000000906109ae83610533565b60158352820152610c1a565b90565b9250907f5349475f56414c49444154494f4e2053554343455353000000000000000000006109ba9251916109f083610533565b60168352820152610c1a565b90508381813d8311610a2b575b610a138183610565565b810103126100dc575180151581036100dc5738610978565b503d610a09565b83513d84823e3d90fd5b909192508752848720918a88935b828510610a5f5750505001830182803861093e565b80548486018901528b97899750909401938c9101610a4a565b9196509392508594915060ff191683830152151560051b0101913861093e565b509051903d90823e3d90fd5b805115610bf557604051906060820182811067ffffffffffffffff82111761054f57604052604082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040830152805160039080821b9080820460081490151715610bdf5760068091049381845106610bcc575b610b61610b4b86610675565b95610b596040519788610565565b808752610675565b6020860190601f190136823784805101945b858110610b835750505050505090565b8460049101918251600190603f9082828260121c16880101518453828282600c1c1688010151838501538282828a1c168801015160028501531685010151868201530190610b73565b936000198114610bdf5760010193610b3f565b634e487b7160e01b600052601160045260246000fd5b506040516020810181811067ffffffffffffffff82111761054f576040526000815290565b60008091604051610c48816108aa602082019463104c13eb60e21b8652602060248401526044830190610650565b51906a636f6e736f6c652e6c6f675afa5056fea164736f6c6343000813000a";

type WebauthnValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WebauthnValidator__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidator> {
    return super.deploy(_impl, overrides || {}) as Promise<WebauthnValidator>;
  }
  override getDeployTransaction(
    _impl: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, overrides || {});
  }
  override attach(address: string): WebauthnValidator {
    return super.attach(address) as WebauthnValidator;
  }
  override connect(signer: Signer): WebauthnValidator__factory {
    return super.connect(signer) as WebauthnValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorInterface {
    return new utils.Interface(_abi) as WebauthnValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidator {
    return new Contract(address, _abi, signerOrProvider) as WebauthnValidator;
  }
}
