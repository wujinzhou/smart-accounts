/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidator,
  WebauthnValidatorInterface,
} from "../../../../contracts/validators/p256/WebauthnValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyId",
        type: "string",
      },
    ],
    name: "PkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "bindEmail",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009a57601f6121d438819003918201601f19168301916001600160401b0383118484101761009f57808492604094855283398101031261009a5780516001600160a01b0391828216820361009a5760200151918216820361009a5760805260a05260405161211e90816100b6823960805181818161068b01528181610a5e0152610e62015260a05181818161025e015261195b0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101275780630c959556146101225780632b7ac3f31461011d5780632ecb20d3146101185780633ba3a0171461011357806349bcad0a1461010e5780637c2ad0f1146101095780638abf6077146101045780638e7e34d7146100ff578063971604c6146100fa5780639ea9bd59146100f5578063a17f619c146100f0578063a3f4df7e146100eb578063a4a1edb1146100e6578063a5a4173f146100e1578063cb2da07c146100dc5763ffa1ad74146100d757600080fd5b610bcd565b610b85565b6108fe565b6108ab565b61084d565b6107d2565b61074f565b6106ff565b6106af565b61066b565b6105c9565b610422565b6103c0565b610282565b61023e565b6101c3565b346101615760203660031901126101615760043563ffffffff60e01b811680910361016157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101615782359167ffffffffffffffff8311610161576020838186019501011161016157565b6020600319820112610161576004359067ffffffffffffffff8211610161576101bf91600401610166565b9091565b6101cc36610194565b8101906060818303126101615767ffffffffffffffff813581811161016157836101f7918401610379565b9160208101358281116101615784610210918301610379565b9060408101359283116101615761023c946102369361022f9201610379565b9233611e9c565b33611fa4565b005b346101615760003660031901126101615760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101615760203660031901126101615760043560ff81168103610161576102ab602091611b8d565b60ff60405191168152f35b6001600160a01b0381160361016157565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102f957604052565b6102c7565b6080810190811067ffffffffffffffff8211176102f957604052565b90601f8019910116810190811067ffffffffffffffff8211176102f957604052565b60405190610160820182811067ffffffffffffffff8211176102f957604052565b67ffffffffffffffff81116102f957601f01601f191660200190565b81601f82011215610161578035906103908261035d565b9261039e604051948561031a565b8284526020838301011161016157816000926020809301838601378301015290565b346101615760a0366003190112610161576103dc6024356102b6565b6044356103e8816102b6565b60843567ffffffffffffffff81116101615760209161040e610418923690600401610379565b9060643590611a70565b6040519015158152f35b34610161576020366003190112610161576001600160a01b03600435610447816102b6565b1660005260026020526020604060002054604051908152f35b60005b8381106104735750506000910152565b8181015183820152602001610463565b9061049660209282815194859201610460565b0190565b6020906104b4928260405194838680955193849201610460565b82019081520301902090565b90600182811c921680156104f0575b60208310146104da57565b634e487b7160e01b600052602260045260246000fd5b91607f16916104cf565b906000929180549161050b836104c0565b91828252600193848116908160001461056d575060011461052d575b50505050565b90919394506000526020928360002092846000945b838610610559575050505001019038808080610527565b805485870183015294019385908201610542565b9294505050602093945060ff191683830152151560051b01019038808080610527565b906020916105a981518092818552858086019101610460565b601f01601f1916010190565b9060206105c6928181520190610590565b90565b34610161576040366003190112610161576004356105e6816102b6565b6024359067ffffffffffffffff82116101615761065b61063f6020610654936001600160a01b0361061e610667973690600401610379565b91166000526000825260406000208260405194838680955193849201610460565b820190815203019020604051928380926104fa565b038261031a565b604051918291826105b5565b0390f35b346101615760003660031901126101615760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101615760203660031901126101615760043567ffffffffffffffff8111610161576106eb6106e6610667923690600401610379565b611c98565b604051918291602083526020830190610590565b606036600319011261016157600435610717816102b6565b60443567ffffffffffffffff81116101615760209161073d610747923690600401610166565b9160243590610db0565b604051908152f35b346101615760403660031901126101615761076b6004356102b6565b60243567ffffffffffffffff81116101615761078b903690600401610166565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101615760403660031901126101615767ffffffffffffffff60043581811161016157610804903690600401610379565b9060243590811161016157602091610823610418923690600401610379565b906117c4565b604051906020820182811067ffffffffffffffff8211176102f95760405260008252565b346101615760003660031901126101615761066760405161086d816102dd565b601281527f576562617574686e2056616c696461746f7200000000000000000000000000006020820152604051918291602083526020830190610590565b6108b436610194565b8101906040818303126101615767ffffffffffffffff90803582811161016157836108e0918301610379565b90602081013592831161016157602093610418936108239201610379565b61091261090a36610194565b8101906110af565b906001600160a01b038093169161096761096361095261094d610948876001600160a01b03166000526001602052604060002090565b610b68565b6111ed565b61095d61094d610829565b9061121f565b1590565b610b23576109c593610983602092838082518301019101611141565b9298916109bf6109ba8a8a6109b28b6109a4604051938492830195866111cd565b03601f19810183528261031a565b519020610cb6565b610ffd565b90610ccd565b96846040519889806109da60009c8d94610483565b039060025afa15610b1e5787610a026109f68793835190610d2d565b60405191828092610483565b039060025afa15610b1e57610a5a928492610a3c895193610a368a6001600160a01b03166000526000602052604060002090565b9061049a565b604051630ae7e17f60e41b8152958694859384939160048501610d85565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa918215610b1e578592610af1575b5050610aa057610a9d91611fa4565b80f35b60405162461bcd60e51b8152602060048201526024808201527f62696e6420656d61696c206661696c65642c20696e76616c6964207369676e616044820152637475726560e01b6064820152608490fd5b610b109250803d10610b17575b610b08818361031a565b810190610d71565b3880610a8e565b503d610afe565b610d21565b60405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420656d61696c206e6f7420656d7074790000000000000000006044820152606490fd5b90610b83610b7c92604051938480926104fa565b038361031a565b565b34610161576020366003190112610161576001600160a01b03600435610baa816102b6565b1660005260016020526106676106546106eb6040600020604051928380926104fa565b3461016157600036600319011261016157610667604051610bed816102dd565b600581527f302e302e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610590565b9060a0828203126101615767ffffffffffffffff82358181116101615782610c54918501610379565b9360208401358281116101615783610c6d918601610379565b9360408101358381116101615784610c86918301610379565b9360608201358481116101615781610c9f918401610379565b936080830135908111610161576105c69201610379565b9060405191602083015260208252610b83826102dd565b610b83919392936040519485918351610cee81602096878088019101610460565b8301610d0282518093878085019101610460565b01610d1582518093868085019101610460565b0103808552018361031a565b6040513d6000823e3d90fd5b6040610b839193929381519481610d4e879351809260208087019101610460565b820190602082015203602081018552018361031a565b5190811515820361016157565b90816020910312610161576105c690610d64565b91610da2906105c694928452606060208501526060840190610590565b9160408184039101526104fa565b9190610dd4610dc86109bf936109ba96810190610c2b565b96919298909395610cb6565b936020604051958680610dea6000998a94610483565b039060025afa15610b1e5784610e076109f6602093835190610d2d565b039060025afa15610b1e57610e37602092610a368651956001600160a01b03166000526000602052604060002090565b92610e566040519485938493630ae7e17f60e41b855260048501610d85565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610b1e578291610e9d575b506105c65750600190565b610eb5915060203d8111610b1757610b08818361031a565b38610e92565b604051906060820182811067ffffffffffffffff8211176102f957604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b9180830460081490151715610f5757565b610f2b565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610f5757565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610f5757565b6000198114610f575760010190565b90610fd58261035d565b610fe2604051918261031a565b8281528092610ff3601f199161035d565b0190602036910137565b8051156110a65761100c610ebb565b61103261102361101c8451610f41565b6006900490565b83516006900661109857610fcb565b91602083019181805101925b83831061104c575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530161103e565b6110a190610fbc565b610fcb565b506105c6610829565b916060838303126101615782356110c5816102b6565b9267ffffffffffffffff92602082013584811161016157816110e8918401610379565b936040830135908111610161576105c69201610379565b81601f820112156101615780516111158161035d565b92611123604051948561031a565b81845260208284010111610161576105c69160208085019101610460565b9060a08282031261016157815167ffffffffffffffff90818111610161578261116b9185016110ff565b93602084015182811161016157836111849186016110ff565b936040810151838111610161578461119d9183016110ff565b93606082015184811161016157816111b69184016110ff565b936080830151908111610161576105c692016110ff565b6040906001600160a01b036105c694931681528160208201520190610590565b600060206040516111fd816102dd565b8281520152602081519160405192611214846102dd565b835201602082015290565b9061096391611297565b9060208201809211610f5757565b9060018201809211610f5757565b91908201809211610f5757565b6020039060208211610f5757565b600019810191908211610f5757565b60ff8111610f57576001901b90565b81810392916000138015828513169184121617610f5757565b91908251928151848110611355575b506020808201519481840151906000965b8188106112d157505050506105c69293505190519061127e565b8051835190818103611302575b50506112f56112ef6112fb92611229565b93611229565b97611229565b96916112b7565b600019868510611324575b91821691168181146112de57039750505050505050565b5061134f61134a6113456113408d61133b89611252565b611245565b610f5c565b61126f565b611260565b1961130d565b9350386112a6565b9080601f830112156101615781519067ffffffffffffffff928383116102f9578260051b604051946020946113948684018861031a565b865284808701928401019380851161016157858401925b8584106113bc575050505050505090565b83518381116101615787916113d6848480948a01016110ff565b8152019301926113ab565b9060208282031261016157815167ffffffffffffffff928382116101615701906080828203126101615760405192611418846102fe565b825184526020830151818111610161578261143491850161135d565b60208501526040830151818111610161578261145191850161135d565b604085015260608301519081116101615761146c92016110ff565b606082015290565b9060208282031261016157815167ffffffffffffffff8111610161576105c692016110ff565b90815180825260208092019182818360051b85019501936000915b8483106114c55750505050505090565b90919293949584806114df83856001950387528a51610590565b98019301930191949392906114b5565b6105c691815181526060611527611515602085015160806020860152608085019061149a565b6040850151848203604086015261149a565b920151906060818403910152610590565b61154a604092838352838301906114ef565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b9160c08383031261016157825192602081015161159d816102b6565b9260408201516115ac816102b6565b9260608301519260808101519267ffffffffffffffff9384811161016157816115d69184016110ff565b9360a0830151908111610161576105c692016110ff565b9060206105c69281815201906114ef565b91906040838203126101615782519067ffffffffffffffff91828111610161578401610160818303126101615761163361033c565b90805184811161016157836116499183016110ff565b8252602081015184811161016157836116639183016110ff565b6020830152604081015184811161016157836116809183016110ff565b60408301526060810151848111610161578361169d9183016110ff565b6060830152608081015184811161016157836116ba9183016110ff565b608083015260a081015184811161016157836116d79183016110ff565b60a083015260c081015184811161016157836116f49183016110ff565b60c083015260e081015184811161016157836117119183016110ff565b60e08301526101008082015185811161016157846117309184016110ff565b9083015261012080820151948511610161576117536020946105c69684016110ff565b9083015261014080910151908201529301610d64565b93906105c6959361179a6117b69461178c6117a89460a08a5260a08a0190610590565b9088820360208a0152610590565b908682036040880152610590565b908482036060860152610590565b916080818403910152610590565b9073__$7b3844f6754ed06fcfc8de6867124591dd$__90604080519063178c5b1b60e31b82526000918281806117fd87600483016105b5565b0381885af4908115610b1e578391611a4e575b508151630793e63d60e51b815283818061182d8560048301611538565b0381895af48015610b1e5761188f918591611a34575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb61187d61187183611c98565b928651918291826105b5565b0390a160208082518301019101611581565b9a94509792509790936001600160a01b0380951698865163bf38fd3760e01b81528881806118c086600483016115ed565b0381875af48015610b1e576118e192610963928b92611a10575b508c611a70565b611a035761190d959493929160608892015190865180809981946262e82960e51b8352600483016105b5565b03915af48015610b1e57869587916119db575b50156119cf5790602093929161195786519460e0818901519801519051978896879586956372d1e02160e11b875260048701611769565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610b1e5782916119b1575b50156119aa57506119a5926119a09183611e9c565b611ad2565b600190565b9250505090565b6119c9915060203d8111610b1757610b08818361031a565b3861198b565b50505050509250505090565b90506119fa9195503d8088833e6119f2818361031a565b8101906115fe565b94909438611920565b5050505050509250505090565b611a2d9192503d808d833e611a25818361031a565b810190611474565b90386118da565b611a4891503d8087833e611a25818361031a565b38611843565b611a6a91503d8085833e611a62818361031a565b8101906113e1565b38611810565b6001600160a01b0316600052600260205260406000205403611acc57611abe906001602052611ab8611ab261065461094d6040600020604051928380926104fa565b916111ed565b90611297565b611ac757600190565b600090565b50600090565b6001600160a01b03168060005260026020526040600020805490611af582610fbc565b905560018101809111610f575760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff8211610f5757565b60ff6060199116019060ff8211610f5757565b60ff6040199116019060ff8211610f5757565b60ff16600a019060ff8211610f5757565b9060ff8091169116019060ff8211610f5757565b60f881901b6001600160f81b031916600360fc1b81101580611c63575b611c5957606160f81b81101580611c4b575b611c3957604160f81b8110159081611c2a575b50611c195760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b611c256105c691611b68565b611b55565b602360f91b1015905038611bcf565b50611c466105c691611b68565b611b42565b50603360f91b811115611bbc565b506105c690611b2f565b50603960f81b811115611baa565b908151811015611c82570160200190565b634e487b7160e01b600052603260045260246000fd5b80519060019182811661016157611cb090831c610fcb565b9160009182825b611cc3575b5050505090565b8151831c811015611d7457611cec611ce3611cdd83610f8c565b84611c71565b5160f81c611b8d565b60041b610ff060f0821691168103610f575781611d5c611d4c611d6e93611d46611d41611d3b611d2d611d27611d228d9b610f8c565b611237565b8b611c71565b516001600160f81b03191690565b60f81c90565b611b8d565b90611b79565b60f81b6001600160f81b03191690565b861a611d688289611c71565b53610fbc565b90611cb7565b611cbc565b90601f8111611d8757505050565b600091825260208220906020601f850160051c83019410611dc3575b601f0160051c01915b828110611db857505050565b818155600101611dac565b9092508290611da3565b919091825167ffffffffffffffff81116102f957611df581611def84546104c0565b84611d79565b602080601f8311600114611e31575081929394600092611e26575b50508160011b916000199060031b1c1916179055565b015190503880611e10565b90601f19831695611e4785600052602060002090565b926000905b888210611e8457505083600195969710611e6b575b505050811b019055565b015160001960f88460031b161c19169055388080611e61565b80600185968294968601518155019501930190611e4c565b906001600160a01b03821692836000526000602052611ede6040600020602060405180928551611ecf8184868a01610460565b820190815203019020546104c0565b611f3a5761065b611f3592611f30611f2a7fd102644d5b7d31da8e6f7217f7e7b2eda07e294b7ee2075ffa0d2e2c9c91c314966001600160a01b03166000526000602052604060002090565b8461049a565b611dcd565b0390a2565b60405162461bcd60e51b815260206004820152600d60248201527f6475706c6963617465206b6579000000000000000000000000000000000000006044820152606490fd5b9091611f966105c693604084526040840190610590565b916020818403910152610590565b611fc9916000338152600190602091808352611fd060408320604051978880926104fa565b038761031a565b338252808352604082209284519267ffffffffffffffff84116102f95761200184611ffb87546104c0565b87611d79565b81601f851160011461207357509280806001600160a01b0397947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db999794611f359793612068575b501b916000199060031b1c19161790555b604051938493169583611f7f565b860151925038612049565b601f9493949291921984169061208e87600052602060002090565b93905b8282106120fa575050927f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db979592611f359592826001600160a01b039996106120e1575b5050811b01905561205a565b85015160001960f88460031b161c1916905538806120d5565b808785968294968c0151815501950193019061209156fea164736f6c6343000813000a";

type WebauthnValidatorConstructorParams =
  | [linkLibraryAddresses: WebauthnValidatorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidator__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidator> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidator>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidator {
    return super.attach(address) as WebauthnValidator;
  }
  override connect(signer: Signer): WebauthnValidator__factory {
    return super.connect(signer) as WebauthnValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorInterface {
    return new utils.Interface(_abi) as WebauthnValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidator {
    return new Contract(address, _abi, signerOrProvider) as WebauthnValidator;
  }
}

export interface WebauthnValidatorLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
