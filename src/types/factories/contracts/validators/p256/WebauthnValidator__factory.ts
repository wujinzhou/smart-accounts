/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidator,
  WebauthnValidatorInterface,
} from "../../../../contracts/validators/p256/WebauthnValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldPk",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newPk",
        type: "bytes",
      },
    ],
    name: "PkChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "newPub",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009357601f611d6038819003918201601f19168301916001600160401b038311848410176100985780849260409485528339810103126100935780516001600160a01b03918282168203610093576020015191821682036100935760805260a052604051611cb190816100af82396080518181816105bb0152610c9d015260a05181818161038401526115440152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101175780630c959556146101125780632b7ac3f31461010d5780632ecb20d31461010857806349bcad0a1461010357806381b994c1146100fe5780638abf6077146100f95780638e7e34d7146100f45780639356375c146100ef578063971604c6146100ea5780639ea9bd59146100e5578063a17f619c146100e0578063a3f4df7e146100db578063a4a1edb1146100d6578063cb2da07c146100d15763ffa1ad74146100cc57600080fd5b6109f5565b6109ad565b61095a565b6108fc565b610881565b6107fe565b6107ae565b61075f565b61063b565b61059b565b61051f565b6103ed565b6103a8565b610364565b6101b3565b346101515760203660031901126101515760043563ffffffff60e01b811680910361015157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101515782359167ffffffffffffffff8311610151576020838186019501011161015157565b6020600319820112610151576004359067ffffffffffffffff8211610151576101af91600401610156565b9091565b6101bc36610184565b81016040828203126101515767ffffffffffffffff91803583811161015157826101e79183016104d8565b9060209081810135908582116101515761022e946102109261020992016104d8565b9233611b42565b600093338552600180835261023560408720604051968780926106c9565b0386610479565b3386528083526040862092845192831161035f5761025d83610257865461068f565b86611ac9565b80601f84116001146102cc57509180806102bb95937f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db97958a936102c1575b501b916000199060031b1c19161790555b604051918291339583611b1d565b0390a280f35b86015192503861029c565b90601f9392931983166102e486600052602060002090565b9289905b8282106103485750509183916102bb96947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db9896941061032f575b5050811b0190556102ad565b85015160001960f88460031b161c191690553880610323565b808785968294968c015181550195019301906102e8565b61042b565b346101515760003660031901126101515760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101515760203660031901126101515760043560ff81168103610151576103d16020916118dd565b60ff60405191168152f35b6001600160a01b0381160361015157565b34610151576020366003190112610151576001600160a01b03600435610412816103dc565b1660005260026020526020604060002054604051908152f35b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761035f57604052565b6040810190811067ffffffffffffffff82111761035f57604052565b90601f8019910116810190811067ffffffffffffffff82111761035f57604052565b60405190610160820182811067ffffffffffffffff82111761035f57604052565b67ffffffffffffffff811161035f57601f01601f191660200190565b81601f82011215610151578035906104ef826104bc565b926104fd6040519485610479565b8284526020838301011161015157816000926020809301838601378301015290565b346101515760c03660031901126101515761053b6024356103dc565b604435610547816103dc565b67ffffffffffffffff608435818111610151576105689036906004016104d8565b5060a435908111610151576020916105876105919236906004016104d8565b9060643590611655565b6040519015158152f35b346101515760003660031901126101515760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b60005b8381106105f25750506000910152565b81810151838201526020016105e2565b9060209161061b815180928185528580860191016105df565b601f01601f1916010190565b906020610638928181520190610602565b90565b346101515760203660031901126101515760043567ffffffffffffffff81116101515761067761067261068b9236906004016104d8565b6119e8565b604051918291602083526020830190610602565b0390f35b90600182811c921680156106bf575b60208310146106a957565b634e487b7160e01b600052602260045260246000fd5b91607f169161069e565b90600092918054916106da8361068f565b91828252600193848116908160001461073c57506001146106fc575b50505050565b90919394506000526020928360002092846000945b8386106107285750505050010190388080806106f6565b805485870183015294019385908201610711565b9294505050602093945060ff191683830152151560051b010190388080806106f6565b34610151576020366003190112610151576001600160a01b03600435610784816103dc565b16600052600060205261068b6107a76106776040600020604051928380926106c9565b0382610479565b6060366003190112610151576004356107c6816103dc565b60443567ffffffffffffffff8111610151576020916107ec6107f6923690600401610156565b9160243590610bd9565b604051908152f35b346101515760403660031901126101515761081a6004356103dc565b60243567ffffffffffffffff81116101515761083a903690600401610156565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101515760403660031901126101515767ffffffffffffffff600435818111610151576108b39036906004016104d8565b90602435908111610151576020916108d26105919236906004016104d8565b906113ac565b604051906020820182811067ffffffffffffffff82111761035f5760405260008252565b346101515760003660031901126101515761068b60405161091c8161045d565b601281527f576562617574686e2056616c696461746f7200000000000000000000000000006020820152604051918291602083526020830190610602565b61096336610184565b8101906040818303126101515767ffffffffffffffff908035828111610151578361098f9183016104d8565b90602081013592831161015157602093610591936108d292016104d8565b34610151576020366003190112610151576001600160a01b036004356109d2816103dc565b16600052600160205261068b6107a76106776040600020604051928380926106c9565b346101515760003660031901126101515761068b604051610a158161045d565b600581527f302e302e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610602565b916080838303126101515767ffffffffffffffff9083358281116101515783610a7d9186016104d8565b9360208101358381116101515784610a969183016104d8565b9360408201358481116101515781610aaf9184016104d8565b9360608301359081116101515761063892016104d8565b9060405191602083015260208252610add8261045d565b565b90610af2602092828151948592016105df565b0190565b610add919392936040519485918351610b17816020968780880191016105df565b8301610b2b825180938780850191016105df565b01610b3e825180938680850191016105df565b01038085520183610479565b6040513d6000823e3d90fd5b6040610add9193929381519481610b778793518092602080870191016105df565b8201906020820152036020810185520183610479565b5190811515820361015157565b908160209103126101515761063890610b8d565b91610bcb9061063894928452606060208501526060840190610602565b9160408184039101526106c9565b91610c00610bf0610c0692610bfb96810190610a53565b939197909295610ac6565b610e4d565b90610af6565b926020604051948580610c1c6000988994610adf565b039060025afa15610d065783610c45610c39602093835190610b56565b60405191828092610adf565b039060025afa15610d0657602090610c728451936001600160a01b03166000526000602052604060002090565b92610c916040519485938493630ae7e17f60e41b855260048501610bae565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610d06578291610cd8575b506106385750600190565b610cf9915060203d8111610cff575b610cf18183610479565b810190610b9a565b38610ccd565b503d610ce7565b610b4a565b604051906060820182811067ffffffffffffffff82111761035f57604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b9180830460081490151715610da757565b610d7b565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610da757565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610da757565b6000198114610da75760010190565b90610e25826104bc565b610e326040519182610479565b8281528092610e43601f19916104bc565b0190602036910137565b805115610ef657610e5c610d0b565b610e82610e73610e6c8451610d91565b6006900490565b835160069006610ee857610e1b565b91602083019181805101925b838310610e9c575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301610e8e565b610ef190610e0c565b610e1b565b506106386108d8565b90929192610f0c816104bc565b91610f1a6040519384610479565b829482845282820111610151576020610add9301906105df565b9080601f8301121561015157815161063892602001610eff565b9080601f830112156101515781519067ffffffffffffffff9283831161035f578260051b60405194602094610f8586840188610479565b865284808701928401019380851161015157858401925b858410610fad575050505050505090565b8351838111610151578791610fc7848480948a0101610f34565b815201930192610f9c565b9060208282031261015157815167ffffffffffffffff92838211610151570190608082820312610151576040519261100984610441565b8251845260208301518181116101515782611025918501610f4e565b602085015260408301518181116101515782611042918501610f4e565b604085015260608301519081116101515761105d9201610f34565b606082015290565b9060208282031261015157815167ffffffffffffffff8111610151576106389201610f34565b90815180825260208092019182818360051b85019501936000915b8483106110b65750505050505090565b90919293949584806110d083856001950387528a51610602565b98019301930191949392906110a6565b61063891815181526060611118611106602085015160806020860152608085019061108b565b6040850151848203604086015261108b565b920151906060818403910152610602565b61113b604092838352838301906110e0565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b919060a08382031261015157825192602081015161118f816103dc565b92604082015161119e816103dc565b9260608301519260808101519067ffffffffffffffff821161015157019080601f8301121561015157815161063892602001610eff565b9060206106389281815201906110e0565b91906040838203126101515782519067ffffffffffffffff91828111610151578401610160818303126101515761121b61049b565b9080518481116101515783611231918301610f34565b82526020810151848111610151578361124b918301610f34565b602083015260408101518481116101515783611268918301610f34565b604083015260608101518481116101515783611285918301610f34565b6060830152608081015184811161015157836112a2918301610f34565b608083015260a081015184811161015157836112bf918301610f34565b60a083015260c081015184811161015157836112dc918301610f34565b60c083015260e081015184811161015157836112f9918301610f34565b60e0830152610100808201518581116101515784611318918401610f34565b90830152610120808201519485116101515761133b602094610638968401610f34565b9083015261014080910151908201529301610b8d565b9390610638959361138261139e946113746113909460a08a5260a08a0190610602565b9088820360208a0152610602565b908682036040880152610602565b908482036060860152610602565b916080818403910152610602565b6040805163178c5b1b60e31b815273__$7b3844f6754ed06fcfc8de6867124591dd$__93916000918281806113e48760048301610627565b0381895af4908115610d06578391611633575b508151630793e63d60e51b81528381806114148560048301611129565b03818a5af48015610d0657611476918591611619575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb611464611458836119e8565b92865191829182610627565b0390a160208082518301019101611172565b989350969150926001600160a01b0380941696855163bf38fd3760e01b815287818c81806114a788600483016111d5565b03915af48015610d06576114cb926114c7928a926115f5575b508a611655565b1590565b6115e957948096979860606114f697015190865180809981946262e82960e51b835260048301610627565b03915af48015610d0657869587916115c1575b50156115b65790602093929161154086519460e0818901519801519051978896879586956372d1e02160e11b875260048701611351565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610d06578291611598575b5015611592575061158861158d9282611b42565b611822565b600190565b91505090565b6115b0915060203d8111610cff57610cf18183610479565b38611574565b505050505091505090565b90506115e09195503d8088833e6115d88183610479565b8101906111e6565b94909438611509565b50505050509250505090565b6116129192503d808c833e61160a8183610479565b810190611065565b90386114c0565b61162d91503d8087833e61160a8183610479565b3861142a565b61164f91503d8085833e6116478183610479565b810190610fd2565b386113f7565b6001600160a01b03166000526002602052604060002054036116b6576116a89060016020526116a261169c6107a76116976040600020604051928380926106c9565b6116bc565b916116bc565b9061175c565b6116b157600190565b600090565b50600090565b600060206040516116cc8161045d565b82815201526020815191604051926116e38461045d565b835201602082015290565b9060208201809211610da757565b9060018201809211610da757565b91908201809211610da757565b6020039060208211610da757565b600019810191908211610da757565b60ff8111610da7576001901b90565b81810392916000138015828513169184121617610da757565b9190825192815184811061181a575b506020808201519481840151906000965b818810611796575050505061063892935051905190611743565b80518351908181036117c7575b50506117ba6117b46117c0926116ee565b936116ee565b976116ee565b969161177c565b6000198685106117e9575b91821691168181146117a357039750505050505050565b5061181461180f61180a6118058d61180089611717565b61170a565b610dac565b611734565b611725565b196117d2565b93503861176b565b6001600160a01b0316806000526002602052604060002080549061184582610e0c565b905560018101809111610da75760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff8211610da757565b60ff6060199116019060ff8211610da757565b60ff6040199116019060ff8211610da757565b60ff16600a019060ff8211610da757565b9060ff8091169116019060ff8211610da757565b60f881901b6001600160f81b031916600360fc1b811015806119b3575b6119a957606160f81b8110158061199b575b61198957604160f81b811015908161197a575b506119695760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b611975610638916118b8565b6118a5565b602360f91b101590503861191f565b50611996610638916118b8565b611892565b50603360f91b81111561190c565b506106389061187f565b50603960f81b8111156118fa565b9081518110156119d2570160200190565b634e487b7160e01b600052603260045260246000fd5b80519060019182811661015157611a0090831c610e1b565b9160009182825b611a13575b5050505090565b8151831c811015611ac457611a3c611a33611a2d83610ddc565b846119c1565b5160f81c6118dd565b60041b610ff060f0821691168103610da75781611aac611a9c611abe93611a96611a91611a8b611a7d611a77611a728d9b610ddc565b6116fc565b8b6119c1565b516001600160f81b03191690565b60f81c90565b6118dd565b906118c9565b60f81b6001600160f81b03191690565b861a611ab882896119c1565b53610e0c565b90611a07565b611a0c565b90601f8111611ad757505050565b600091825260208220906020601f850160051c83019410611b13575b601f0160051c01915b828110611b0857505050565b818155600101611afc565b9092508290611af3565b9091611b3461063893604084526040840190610602565b916020818403910152610602565b61022e916000338152602090808252611b6460408220604051968780926106c9565b338152808252604081209183519167ffffffffffffffff831161035f57611b8f83610257865461068f565b81601f8411600114611c0757509282611bf7936001600160a01b0396937f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066989691611bfc575b508160011b916000199060031b1c19161790555b604051938493169583611b1d565b0390a2565b905083015138611bd5565b601f92919219841690611c1f86600052602060002090565b93905b828210611c8c575050836001600160a01b0396937f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066989693611bf79660019410611c73575b5050811b019055611be9565b85015160001960f88460031b161c191690553880611c67565b80600185968294968b01518155019501930190611c2256fea164736f6c6343000813000a";

type WebauthnValidatorConstructorParams =
  | [linkLibraryAddresses: WebauthnValidatorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidator__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidator> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidator>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidator {
    return super.attach(address) as WebauthnValidator;
  }
  override connect(signer: Signer): WebauthnValidator__factory {
    return super.connect(signer) as WebauthnValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorInterface {
    return new utils.Interface(_abi) as WebauthnValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidator {
    return new Contract(address, _abi, signerOrProvider) as WebauthnValidator;
  }
}

export interface WebauthnValidatorLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
