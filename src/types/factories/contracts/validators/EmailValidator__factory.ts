/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmailValidator,
  EmailValidatorInterface,
} from "../../../contracts/validators/EmailValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sender",
        type: "string",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461007157601f61128e38819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b038116810361007157608052604051611201908161008d82396080518181816102cb0152610e0a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c90816301ffc9a7146100ba575080630c959556146100b55780632b7ac3f3146100b0578063971604c6146100ab5780639ea9bd59146100a6578063a3f4df7e146100a1578063a4a1edb11461009c578063cb2da07c14610097578063fdb1cabd146100925763ffa1ad741461008d57600080fd5b610716565b610682565b6105e2565b6104f9565b610497565b61034d565b610305565b6102ab565b610158565b346100f35760203660031901126100f3576004359063ffffffff60e01b82168092036100f35750631431782f60e31b1460805260206080f35b80fd5b9181601f840112156101245782359167ffffffffffffffff8311610124576020838186019501011161012457565b600080fd5b6020600319820112610124576004359067ffffffffffffffff821161012457610154916004016100f6565b9091565b61016136610129565b9060009033825260209282845261017a6040842061053c565b913384528385526040842067ffffffffffffffff83116102a6576101a8836101a28354610502565b836110b8565b8495601f841160011461021857508285967f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db95969161020d575b508360011b906000198560031b1c19161790555b61020760405192839233968461110c565b0390a280f35b9050820135386101e2565b601f1984169661022d83600052602060002090565b9187905b89821061028e575050847f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db96979810610274575b5050600183811b0190556101f6565b830135600019600386901b60f8161c191690553880610265565b80600184958294958901358155019401920190610231565b61038e565b346101245760003660031901126101245760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b600435906001600160a01b038216820361012457565b6060366003190112610124576103196102ef565b60443567ffffffffffffffff81116101245760209161033f6103459236906004016100f6565b91610774565b604051908152f35b34610124576040366003190112610124576103666102ef565b5060243567ffffffffffffffff8111610124576103879036906004016100f6565b5050611147565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176102a657604052565b6040810190811067ffffffffffffffff8211176102a657604052565b90601f8019910116810190811067ffffffffffffffff8211176102a657604052565b60405190610160820182811067ffffffffffffffff8211176102a657604052565b67ffffffffffffffff81116102a657601f01601f191660200190565b60005b83811061044e5750506000910152565b818101518382015260200161043e565b906020916104778151809281855285808601910161043b565b601f01601f1916010190565b90602061049492818152019061045e565b90565b34610124576000366003190112610124576104f56040516104b7816103c0565b600f81527f456d61696c2056616c696461746f720000000000000000000000000000000000602082015260405191829160208352602083019061045e565b0390f35b61038736610129565b90600182811c92168015610532575b602083101461051c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610511565b906040519182600082549261055084610502565b9081845260019485811690816000146105bf575060011461057c575b505061057a925003836103dc565b565b9093915060005260209081600020936000915b8183106105a757505061057a9350820101388061056c565b8554888401850152948501948794509183019161058f565b91505061057a94506020925060ff191682840152151560051b820101388061056c565b34610124576020366003190112610124576001600160a01b036106036102ef565b1660005260006020526104f561061c604060002061053c565b60405191829160208352602083019061045e565b92919261063c8261041f565b9161064a60405193846103dc565b829481845281830111610124578281602093846000960137010152565b9080601f830112156101245781602061049493359101610630565b346101245760803660031901126101245767ffffffffffffffff600435818111610124576106b4903690600401610667565b90602435818111610124576106cd903690600401610667565b916064359182116101245736602383011215610124576104f5926106fe610704933690602481600401359101610630565b91610caf565b60405190151581529081906020820190565b34610124576000366003190112610124576104f5604051610736816103c0565b600581527f302e302e31000000000000000000000000000000000000000000000000000000602082015260405191829160208352602083019061045e565b91906001600160a01b03600093168352826020526107946040842061053c565b918251156107fc5781016040828203126107f85767ffffffffffffffff82358181116107f457826107c6918501610667565b9260208101359182116107f457916107e4916107ea95949301610667565b90610caf565b6104945750600190565b8580fd5b8380fd5b50505050600190565b81601f8201121561012457805161081b8161041f565b9261082960405194856103dc565b8184526020828401011161012457610494916020808501910161043b565b9080601f830112156101245781519067ffffffffffffffff928383116102a6578260051b6040519460209461087e868401886103dc565b865284808701928401019380851161012457858401925b8584106108a6575050505050505090565b83518381116101245787916108c0848480948a0101610805565b815201930192610895565b9060208282031261012457815167ffffffffffffffff928382116101245701906080828203126101245760405192610902846103a4565b825184526020830151818111610124578261091e918501610847565b60208501526040830151818111610124578261093b918501610847565b60408501526060830151908111610124576109569201610805565b606082015290565b6040513d6000823e3d90fd5b9060208282031261012457815167ffffffffffffffff8111610124576104949201610805565b908082519081815260208091019281808460051b8301019501936000915b8483106109be5750505050505090565b90919293949584806109dc600193601f198682030187528a5161045e565b98019301930191949392906109ae565b61049491815181526060610a24610a126020850151608060208601526080850190610990565b60408501518482036040860152610990565b92015190606081840391015261045e565b9060206104949281815201906109ec565b610a58604092838352838301906109ec565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b60405190610a9c826103c0565b600982527f7375626a6563743a2000000000000000000000000000000000000000000000006020830152565b5190811515820361012457565b91906040838203126101245782519067ffffffffffffffff918281116101245784016101608183031261012457610b0a6103fe565b9080518481116101245783610b20918301610805565b825260208101518481116101245783610b3a918301610805565b602083015260408101518481116101245783610b57918301610805565b604083015260608101518481116101245783610b74918301610805565b606083015260808101518481116101245783610b91918301610805565b608083015260a08101518481116101245783610bae918301610805565b60a083015260c08101518481116101245783610bcb918301610805565b60c083015260e08101518481116101245783610be8918301610805565b60e0830152610100808201518581116101245784610c07918401610805565b908301526101208082015194851161012457610c2a602094610494968401610805565b9083015261014080910151908201529301610ac8565b908160209103126101245761049490610ac8565b93906104949593610c85610ca194610c77610c939460a08a5260a08a019061045e565b9088820360208a015261045e565b90868203604088015261045e565b90848203606086015261045e565b91608081840391015261045e565b9073__$7b3844f6754ed06fcfc8de6867124591dd$__9160409182519363178c5b1b60e31b8552600095868680610ce98660048301610483565b0381855af4958615610e64578796610ee7575b50845163bf38fd3760e01b8152878180610d198a60048301610a35565b0381865af48015610e6457610d5092610d4c928a92610ec2575b50610d40610d4691610f0b565b91610f0b565b90610f3d565b1590565b610eba578351630793e63d60e51b815290868280610d718960048301610a46565b0381845af48015610e6457610db996610d9d6060928a958691610e98575b50610d98610a8f565b61118c565b015190855180809881946262e82960e51b835260048301610483565b03915af48015610e645785948691610e70575b5015610e6957610dfe60209385519560e082820151910151915196879586956372d1e02160e11b875260048701610c54565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610e645791610e3c575090565b610494915060203d8111610e5d575b610e5581836103dc565b810190610c40565b503d610e4b565b61095e565b5050505090565b9050610e8f9194503d8087833e610e8781836103dc565b810190610ad5565b93909338610dcc565b610eb491503d8088833e610eac81836103dc565b81019061096a565b38610d8f565b505050505090565b610d46919250610edf610d40918c3d8091833e610eac81836103dc565b929150610d33565b610f049196503d8089833e610efc81836103dc565b8101906108cb565b9438610cfc565b60006020604051610f1b816103c0565b8281520152602081519160405192610f32846103c0565b835201602082015290565b90610d4c91610ff2565b634e487b7160e01b600052601160045260246000fd5b9060208201809211610f6b57565b610f47565b91908201809211610f6b57565b6020039060208211610f6b57565b600019810191908211610f6b57565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610f6b57565b60ff8111610f6b576001901b90565b81810392916000138015828513169184121617610f6b57565b919082519281518481106110b0575b506020808201519481840151906000965b81881061102c575050505061049492935051905190610fd9565b805183519081810361105d575b505061105061104a61105692610f5d565b93610f5d565b97610f5d565b9691611012565b60001986851061107f575b918216911681811461103957039750505050505050565b506110aa6110a56110a061109b8d61109689610f7d565b610f70565b610f9a565b610fca565b610f8b565b19611068565b935038611001565b90601f81116110c657505050565b600091825260208220906020601f850160051c83019410611102575b601f0160051c01915b8281106110f757505050565b8181556001016110eb565b90925082906110e2565b9192602093611124829360408652604086019061045e565b9385818603910152818452848401376000828201840152601f01601f1916010190565b60405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b600091906111d36111e184936040519283916111c16020840196634b5c427760e01b885260406024860152606485019061045e565b8381036023190160448501529061045e565b03601f1981018352826103dc565b51906a636f6e736f6c652e6c6f675afa5056fea164736f6c6343000813000a";

type EmailValidatorConstructorParams =
  | [linkLibraryAddresses: EmailValidatorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmailValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class EmailValidator__factory extends ContractFactory {
  constructor(...args: EmailValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        EmailValidator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: EmailValidatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<EmailValidator> {
    return super.deploy(_verifier, overrides || {}) as Promise<EmailValidator>;
  }
  override getDeployTransaction(
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override attach(address: string): EmailValidator {
    return super.attach(address) as EmailValidator;
  }
  override connect(signer: Signer): EmailValidator__factory {
    return super.connect(signer) as EmailValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmailValidatorInterface {
    return new utils.Interface(_abi) as EmailValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmailValidator {
    return new Contract(address, _abi, signerOrProvider) as EmailValidator;
  }
}

export interface EmailValidatorLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
