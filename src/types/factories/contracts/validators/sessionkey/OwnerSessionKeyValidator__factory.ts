/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnerSessionKeyValidator,
  OwnerSessionKeyValidatorInterface,
} from "../../../../contracts/validators/sessionkey/OwnerSessionKeyValidator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sessionKey",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "NewSessionKey",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sessionKey",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "sessionKeyStorage",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576108b0908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610448575081630c959556146102b1578163971604c6146102625781639ea9bd591461020c578163a3f4df7e146101b9578163a4a1edb11461014357508063fbab6a7a146100d65763ffa1ad741461007d57600080fd5b346100d257816003193601126100d2576100ce906100996104c7565b90600582527f302e302e31000000000000000000000000000000000000000000000000000000602083015251918291826104fd565b0390f35b5080fd5b50346100d257806003193601126100d2576100ef6104b1565b602435906001600160a01b039081831680930361013f5716835260208381528284209184529081529181902054905165ffffffffffff808316825260309290921c90911691810191909152604090f35b8480fd5b90508260203660031901126101b65781359067ffffffffffffffff82116101b657506064926101776020923690850161047e565b50505162461bcd60e51b815291820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152fd5b80fd5b5050346100d257816003193601126100d2576100ce906101d76104c7565b90601b82527f4f776e65722053657373696f6e204b65792056616c696461746f720000000000602083015251918291826104fd565b90503461025e578160031936011261025e576102266104b1565b926024359067ffffffffffffffff82116101b657509261024e6102559260209536910161047e565b5050610858565b90519015158152f35b8280fd5b9050606036600319011261025e576102786104b1565b926044359067ffffffffffffffff82116101b65750926102a06102aa9260209536910161047e565b9160243590610546565b9051908152f35b9050602091826003193601126104445767ffffffffffffffff908235828111610440576102e1903690850161047e565b9390948460141161043c57853560601c9585601a1161043857601481013560d01c95821161043857601a013560d01c93848611156103d157835192838501918211848310176103be5750835284825280820184815286885287825283882033808a5292528388209251835491516bffffffffffffffffffffffff1990921665ffffffffffff9182161760309290921b6bffffffffffff0000000000001691909117909255915193811684529091166020830152907f31b5c77503fad62fe58a0293e3020e533a464b77d0a29f3495d61c90c09086c790604090a380f35b634e487b7160e01b895260419052602488fd5b50608492519162461bcd60e51b8352820152603760248201527f4f776e657253657373696f6e4b657956616c696461746f723a20696e76616c6960448201527f642076616c6964556e74696c2f76616c696441667465720000000000000000006064820152fd5b8780fd5b8680fd5b8580fd5b8380fd5b84913461025e57602036600319011261025e573563ffffffff60e01b811680910361025e57631431782f60e31b14815260209150f35b9181601f840112156104ac5782359167ffffffffffffffff83116104ac57602083818601950101116104ac57565b600080fd5b600435906001600160a01b03821682036104ac57565b604051906040820182811067ffffffffffffffff8211176104e757604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b82811061053257505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610510565b909193926000927f19457468657265756d205369676e6564204d6573736167653a0a3332000000008452601c52603c83209067ffffffffffffffff958682116106695760405196601f8301601f19908116603f011688019081118882101761065557604052818752368282011161013f57956105dd92856020846105d59560409a9b8387013784010152610797565b91909161067d565b6001600160a01b0380911683528260205283832091168252602052205465ffffffffffff81161561064f5760a01b79ffffffffffff00000000000000000000000000000000000000007fffffffffffff0000000000000000000000000000000000000000000000000000821691161790565b50600190565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526041600452602485fd5b6005811015610781578061068e5750565b600181036106db5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036107285760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461073157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9060418151146000146107c5576107c1916020820151906060604084015193015160001a906107cf565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161084c5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561083f5781516001600160a01b0381161561064f579190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b036000911681528060205260408120338252602052604081205465ffffffffffff90818160301c1642111561089e5716421161089b5750600190565b90565b50509056fea164736f6c6343000813000a";

type OwnerSessionKeyValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerSessionKeyValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnerSessionKeyValidator__factory extends ContractFactory {
  constructor(...args: OwnerSessionKeyValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OwnerSessionKeyValidator> {
    return super.deploy(overrides || {}) as Promise<OwnerSessionKeyValidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnerSessionKeyValidator {
    return super.attach(address) as OwnerSessionKeyValidator;
  }
  override connect(signer: Signer): OwnerSessionKeyValidator__factory {
    return super.connect(signer) as OwnerSessionKeyValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerSessionKeyValidatorInterface {
    return new utils.Interface(_abi) as OwnerSessionKeyValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerSessionKeyValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnerSessionKeyValidator;
  }
}
