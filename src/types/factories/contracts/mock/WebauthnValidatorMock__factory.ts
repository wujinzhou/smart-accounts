/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidatorMock,
  WebauthnValidatorMockInterface,
} from "../../../contracts/mock/WebauthnValidatorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyId",
        type: "string",
      },
    ],
    name: "PkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "bindEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "keyBytes",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "keyId",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "increase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009a57601f61237138819003918201601f19168301916001600160401b0383118484101761009f57808492604094855283398101031261009a5780516001600160a01b0391828216820361009a5760200151918216820361009a5760805260a0526040516122bb90816100b682396080518181816109a30152818161108b0152611565015260a0518181816106800152611d970152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101475780630c95955614610142578063183fd7921461013d5780632b7ac3f3146101385780632ecb20d3146101335780633ba3a0171461012e57806349bcad0a146101295780637c2ad0f1146101245780638abf60771461011f5780638e7e34d71461011a578063971604c6146101155780639ea9bd5914610110578063a17f619c1461010b578063a3f4df7e14610106578063a4a1edb114610101578063a5a4173f146100fc578063cb2da07c146100f7578063eab136a0146100f25763ffa1ad74146100ed57600080fd5b610cb6565b610c8f565b610c47565b610c16565b610bc3565b610b65565b610aea565b610a67565b610a17565b6109c7565b610983565b6108e1565b61073a565b6106d8565b6106a4565b610660565b6104b1565b6101e3565b346101815760203660031901126101815760043563ffffffff60e01b811680910361018157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101815782359167ffffffffffffffff8311610181576020838186019501011161018157565b6020600319820112610181576004359067ffffffffffffffff8211610181576101df91600401610186565b9091565b6101ec366101b4565b81016060828203126101815767ffffffffffffffff918035838111610181578261021791830161046a565b9060209081810135858111610181578461023291830161046a565b604082013591868311610181576102769561025893610251920161046a565b93336121ab565b600093338552600180835261027d6040872060405196878092610812565b038661040b565b338652808352604086209284519283116103a7576102a58361029f86546107d8565b86610d14565b80601f8411600114610314575091808061030395937f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db97958a93610309575b501b916000199060031b1c19161790555b604051918291339583612289565b0390a280f35b8601519250386102e4565b90601f93929319831661032c86600052602060002090565b9289905b82821061039057505091839161030396947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db98969410610377575b5050811b0190556102f5565b85015160001960f88460031b161c19169055388061036b565b808785968294968c01518155019501930190610330565b6103bd565b6001600160a01b0381160361018157565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176103a757604052565b6080810190811067ffffffffffffffff8211176103a757604052565b90601f8019910116810190811067ffffffffffffffff8211176103a757604052565b60405190610160820182811067ffffffffffffffff8211176103a757604052565b67ffffffffffffffff81116103a757601f01601f191660200190565b81601f82011215610181578035906104818261044e565b9261048f604051948561040b565b8284526020838301011161018157816000926020809301838601378301015290565b34610181576080366003190112610181576004356104ce816103ac565b67ffffffffffffffff602435818111610181576104ef90369060040161046a565b916044358281116101815761050890369060040161046a565b926064358381116101815761052190369060040161046a565b926000946001600160a01b038416865261055260208092888252604089208260405194838680955193849201610778565b8201908152030190209280519283116103a7576105738361029f86546107d8565b81601f84116001146105d4575091806105c194926105c697969489926105c9575b50508160011b916000199060031b1c19161790556001600160a01b03166000526001602052604060002090565b610d68565b80f35b015190503880610594565b9190601f1984166105ea86600052602060002090565b9389905b8282106106485750509260019285926105c69998966105c198961061062f575b505050811b0190556001600160a01b03166000526001602052604060002090565b015160001960f88460031b161c1916905538808061060e565b806001869782949787015181550196019401906105ee565b346101815760003660031901126101815760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101815760203660031901126101815760043560ff81168103610181576106cd602091611fbf565b60ff60405191168152f35b346101815760a0366003190112610181576106f46024356103ac565b604435610700816103ac565b60843567ffffffffffffffff81116101815760209161072661073092369060040161046a565b9060643590611ea2565b6040519015158152f35b34610181576020366003190112610181576001600160a01b0360043561075f816103ac565b1660005260026020526020604060002054604051908152f35b60005b83811061078b5750506000910152565b818101518382015260200161077b565b906107ae60209282815194859201610778565b0190565b6020906107cc928260405194838680955193849201610778565b82019081520301902090565b90600182811c92168015610808575b60208310146107f257565b634e487b7160e01b600052602260045260246000fd5b91607f16916107e7565b9060009291805491610823836107d8565b9182825260019384811690816000146108855750600114610845575b50505050565b90919394506000526020928360002092846000945b83861061087157505050500101903880808061083f565b80548587018301529401938590820161085a565b9294505050602093945060ff191683830152151560051b0101903880808061083f565b906020916108c181518092818552858086019101610778565b601f01601f1916010190565b9060206108de9281815201906108a8565b90565b34610181576040366003190112610181576004356108fe816103ac565b6024359067ffffffffffffffff821161018157610973610957602061096c936001600160a01b0361093661097f97369060040161046a565b91166000526000825260406000208260405194838680955193849201610778565b82019081520301902060405192838092610812565b038261040b565b604051918291826108cd565b0390f35b346101815760003660031901126101815760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101815760203660031901126101815760043567ffffffffffffffff811161018157610a036109fe61097f92369060040161046a565b6120ca565b6040519182916020835260208301906108a8565b606036600319011261018157600435610a2f816103ac565b60443567ffffffffffffffff811161018157602091610a55610a5f923690600401610186565b9160243590610fbc565b604051908152f35b3461018157604036600319011261018157610a836004356103ac565b60243567ffffffffffffffff811161018157610aa3903690600401610186565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101815760403660031901126101815767ffffffffffffffff60043581811161018157610b1c90369060040161046a565b9060243590811161018157602091610b3b61073092369060040161046a565b90611c00565b604051906020820182811067ffffffffffffffff8211176103a75760405260008252565b346101815760003660031901126101815761097f604051610b85816103d3565b601281527f576562617574686e2056616c696461746f72000000000000000000000000000060208201526040519182916020835260208301906108a8565b610bcc366101b4565b8101906040818303126101815767ffffffffffffffff9080358281116101815783610bf891830161046a565b9060208101359283116101815760209361073093610b3b920161046a565b6020610730610c24366101b4565b9061142b565b90610c45610c3e9260405193848092610812565b038361040b565b565b34610181576020366003190112610181576001600160a01b03600435610c6c816103ac565b16600052600160205261097f61096c610a03604060002060405192838092610812565b3461018157602036600319011261018157610cb4600435610caf816103ac565b611f04565b005b346101815760003660031901126101815761097f604051610cd6816103d3565b600581527f302e302e3100000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906108a8565b90601f8111610d2257505050565b600091825260208220906020601f850160051c83019410610d5e575b601f0160051c01915b828110610d5357505050565b818155600101610d47565b9092508290610d3e565b919091825167ffffffffffffffff81116103a757610d9081610d8a84546107d8565b84610d14565b602080601f8311600114610dcc575081929394600092610dc1575b50508160011b916000199060031b1c1916179055565b015190503880610dab565b90601f19831695610de285600052602060002090565b926000905b888210610e1f57505083600195969710610e06575b505050811b019055565b015160001960f88460031b161c19169055388080610dfc565b80600185968294968601518155019501930190610de7565b9060a0828203126101815767ffffffffffffffff82358181116101815782610e6091850161046a565b9360208401358281116101815783610e7991860161046a565b9360408101358381116101815784610e9291830161046a565b9360608201358481116101815781610eab91840161046a565b936080830135908111610181576108de920161046a565b9060405191602083015260208252610c45826103d3565b610c45919392936040519485918351610efa81602096878088019101610778565b8301610f0e82518093878085019101610778565b01610f2182518093868085019101610778565b0103808552018361040b565b6040513d6000823e3d90fd5b6040610c459193929381519481610f5a879351809260208087019101610778565b820190602082015203602081018552018361040b565b5190811515820361018157565b90816020910312610181576108de90610f70565b91610fae906108de949284526060602085015260608401906108a8565b916040818403910152610812565b9190610feb610fd4610fe593610fe096810190610e37565b96919298909395610ec2565b61123b565b90610ed9565b9360206040519586806110016000998a9461079b565b039060025afa156110f4578461102a61101e602093835190610f39565b6040519182809261079b565b039060025afa156110f45761106060209261105a8651956001600160a01b03166000526000602052604060002090565b906107b2565b9261107f6040519485938493630ae7e17f60e41b855260048501610f91565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156110f45782916110c6575b506108de5750600190565b6110e7915060203d81116110ed575b6110df818361040b565b810190610f7d565b386110bb565b503d6110d5565b610f2d565b604051906060820182811067ffffffffffffffff8211176103a757604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b918083046008149015171561119557565b611169565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361119557565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361119557565b60001981146111955760010190565b906112138261044e565b611220604051918261040b565b8281528092611231601f199161044e565b0190602036910137565b8051156112e45761124a6110f9565b61127061126161125a845161117f565b6006900490565b8351600690066112d657611209565b91602083019181805101925b83831061128a575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530161127c565b6112df906111fa565b611209565b506108de610b41565b91606083830312610181578235611303816103ac565b9267ffffffffffffffff926020820135848111610181578161132691840161046a565b936040830135908111610181576108de920161046a565b81601f820112156101815780516113538161044e565b92611361604051948561040b565b81845260208284010111610181576108de9160208085019101610778565b9060a08282031261018157815167ffffffffffffffff9081811161018157826113a991850161133d565b93602084015182811161018157836113c291860161133d565b93604081015183811161018157846113db91830161133d565b93606082015184811161018157816113f491840161133d565b936080830151908111610181576108de920161133d565b6040906001600160a01b036108de949316815281602082015201906108a8565b611437918101906112ed565b6001600160a01b038093169061148b61148761147661147161146c866001600160a01b03166000526001602052604060002090565b610c2a565b611629565b611481611471610b41565b9061165b565b1590565b6115e4576114de936114a760209283808251830101910161137f565b929891610fe5610fe0898b6114d68b6114c86040519384928301958661140b565b03601f19810183528261040b565b519020610ec2565b96846040519889806114f360009c8d9461079b565b039060025afa156110f4578761150f61101e8793835190610f39565b039060025afa156110f45761156192849261154389519361105a896001600160a01b03166000526000602052604060002090565b604051630ae7e17f60e41b8152958694859384939160048501610f91565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa9182156110f45785926115c7575b50506115a057505090565b6115c292506105c1906001600160a01b03166000526001602052604060002090565b600190565b6115dd9250803d106110ed576110df818361040b565b3880611595565b60405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420656d61696c206e6f7420656d7074790000000000000000006044820152606490fd5b60006020604051611639816103d3565b8281520152602081519160405192611650846103d3565b835201602082015290565b90611487916116d3565b906020820180921161119557565b906001820180921161119557565b9190820180921161119557565b602003906020821161119557565b60001981019190821161119557565b60ff8111611195576001901b90565b8181039291600013801582851316918412161761119557565b91908251928151848110611791575b506020808201519481840151906000965b81881061170d57505050506108de929350519051906116ba565b805183519081810361173e575b505061173161172b61173792611665565b93611665565b97611665565b96916116f3565b600019868510611760575b918216911681811461171a57039750505050505050565b5061178b61178661178161177c8d6117778961168e565b611681565b61119a565b6116ab565b61169c565b19611749565b9350386116e2565b9080601f830112156101815781519067ffffffffffffffff928383116103a7578260051b604051946020946117d08684018861040b565b865284808701928401019380851161018157858401925b8584106117f8575050505050505090565b8351838111610181578791611812848480948a010161133d565b8152019301926117e7565b9060208282031261018157815167ffffffffffffffff928382116101815701906080828203126101815760405192611854846103ef565b8251845260208301518181116101815782611870918501611799565b60208501526040830151818111610181578261188d918501611799565b60408501526060830151908111610181576118a8920161133d565b606082015290565b9060208282031261018157815167ffffffffffffffff8111610181576108de920161133d565b90815180825260208092019182818360051b85019501936000915b8483106119015750505050505090565b909192939495848061191b83856001950387528a516108a8565b98019301930191949392906118f1565b6108de9181518152606061196361195160208501516080602086015260808501906118d6565b604085015184820360408601526118d6565b9201519060608184039101526108a8565b6119866040928383528383019061192b565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b9160c0838303126101815782519260208101516119d9816103ac565b9260408201516119e8816103ac565b9260608301519260808101519267ffffffffffffffff938481116101815781611a1291840161133d565b9360a0830151908111610181576108de920161133d565b9060206108de92818152019061192b565b91906040838203126101815782519067ffffffffffffffff918281116101815784016101608183031261018157611a6f61042d565b9080518481116101815783611a8591830161133d565b825260208101518481116101815783611a9f91830161133d565b602083015260408101518481116101815783611abc91830161133d565b604083015260608101518481116101815783611ad991830161133d565b606083015260808101518481116101815783611af691830161133d565b608083015260a08101518481116101815783611b1391830161133d565b60a083015260c08101518481116101815783611b3091830161133d565b60c083015260e08101518481116101815783611b4d91830161133d565b60e0830152610100808201518581116101815784611b6c91840161133d565b908301526101208082015194851161018157611b8f6020946108de96840161133d565b9083015261014080910151908201529301610f70565b93906108de9593611bd6611bf294611bc8611be49460a08a5260a08a01906108a8565b9088820360208a01526108a8565b9086820360408801526108a8565b9084820360608601526108a8565b9160808184039101526108a8565b9073__$7b3844f6754ed06fcfc8de6867124591dd$__90604080519063178c5b1b60e31b8252600091828180611c3987600483016108cd565b0381885af49081156110f4578391611e80575b508151630793e63d60e51b8152838180611c698560048301611974565b0381895af480156110f457611ccb918591611e66575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb611cb9611cad836120ca565b928651918291826108cd565b0390a1602080825183010191016119bd565b9a94509792509790936001600160a01b0380951698865163bf38fd3760e01b8152888180611cfc8660048301611a29565b0381875af480156110f457611d1d92611487928b92611e42575b508c611ea2565b611e3557611d49959493929160608892015190865180809981946262e82960e51b8352600483016108cd565b03915af480156110f45786958791611e0d575b5015611e0157906020939291611d9386519460e0818901519801519051978896879586956372d1e02160e11b875260048701611ba5565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa9081156110f4578291611de3575b5015611ddc57506115c292610caf91836121ab565b9250505090565b611dfb915060203d81116110ed576110df818361040b565b38611dc7565b50505050509250505090565b9050611e2c9195503d8088833e611e24818361040b565b810190611a3a565b94909438611d5c565b5050505050509250505090565b611e5f9192503d808d833e611e57818361040b565b8101906118b0565b9038611d16565b611e7a91503d8087833e611e57818361040b565b38611c7f565b611e9c91503d8085833e611e94818361040b565b81019061181d565b38611c4c565b6001600160a01b0316600052600260205260406000205403611efe57611ef0906001602052611eea611ee461096c611471604060002060405192838092610812565b91611629565b906116d3565b611ef957600190565b600090565b50600090565b6001600160a01b03168060005260026020526040600020805490611f27826111fa565b9055600181018091116111955760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff821161119557565b60ff6060199116019060ff821161119557565b60ff6040199116019060ff821161119557565b60ff16600a019060ff821161119557565b9060ff8091169116019060ff821161119557565b60f881901b6001600160f81b031916600360fc1b81101580612095575b61208b57606160f81b8110158061207d575b61206b57604160f81b811015908161205c575b5061204b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b6120576108de91611f9a565b611f87565b602360f91b1015905038612001565b506120786108de91611f9a565b611f74565b50603360f91b811115611fee565b506108de90611f61565b50603960f81b811115611fdc565b9081518110156120b4570160200190565b634e487b7160e01b600052603260045260246000fd5b805190600191828116610181576120e290831c611209565b9160009182825b6120f5575b5050505090565b8151831c8110156121a65761211e61211561210f836111ca565b846120a3565b5160f81c611fbf565b60041b610ff060f0821691168103611195578161218e61217e6121a09361217861217361216d61215f6121596121548d9b6111ca565b611673565b8b6120a3565b516001600160f81b03191690565b60f81c90565b611fbf565b90611fab565b60f81b6001600160f81b03191690565b861a61219a82896120a3565b536111fa565b906120e9565b6120ee565b906001600160a01b038216928360005260006020526121ed60406000206020604051809285516121de8184868a01610778565b820190815203019020546107d8565b6122445761097361223f926105c16122397fd102644d5b7d31da8e6f7217f7e7b2eda07e294b7ee2075ffa0d2e2c9c91c314966001600160a01b03166000526000602052604060002090565b846107b2565b0390a2565b60405162461bcd60e51b815260206004820152600d60248201527f6475706c6963617465206b6579000000000000000000000000000000000000006044820152606490fd5b90916122a06108de936040845260408401906108a8565b9160208184039101526108a856fea164736f6c6343000813000a";

type WebauthnValidatorMockConstructorParams =
  | [
      linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidatorMock__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidatorMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidatorMock> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidatorMock>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidatorMock {
    return super.attach(address) as WebauthnValidatorMock;
  }
  override connect(signer: Signer): WebauthnValidatorMock__factory {
    return super.connect(signer) as WebauthnValidatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorMockInterface {
    return new utils.Interface(_abi) as WebauthnValidatorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidatorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WebauthnValidatorMock;
  }
}

export interface WebauthnValidatorMockLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
