/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidatorMock,
  WebauthnValidatorMockInterface,
} from "../../../contracts/mock/WebauthnValidatorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyId",
        type: "string",
      },
    ],
    name: "PkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "bindEmail",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "keyBytes",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "keyId",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "increase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009a57601f6123c838819003918201601f19168301916001600160401b0383118484101761009f57808492604094855283398101031261009a5780516001600160a01b0391828216820361009a5760200151918216820361009a5760805260a05260405161231290816100b6823960805181818161086001528181610c33015261117c015260a05181818161053d0152611c7c0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101475780630c95955614610142578063183fd7921461013d5780632b7ac3f3146101385780632ecb20d3146101335780633ba3a0171461012e57806349bcad0a146101295780637c2ad0f1146101245780638abf60771461011f5780638e7e34d71461011a578063971604c6146101155780639ea9bd5914610110578063a17f619c1461010b578063a3f4df7e14610106578063a4a1edb114610101578063a5a4173f146100fc578063cb2da07c146100f7578063eab136a0146100f25763ffa1ad74146100ed57600080fd5b610dc4565b610d9f565b610d57565b610ad3565b610a80565b610a22565b6109a7565b610924565b6108d4565b610884565b610840565b61079e565b6105f7565b610595565b610561565b61051d565b610368565b6101e3565b346101815760203660031901126101815760043563ffffffff60e01b811680910361018157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101815782359167ffffffffffffffff8311610181576020838186019501011161018157565b6020600319820112610181576004359067ffffffffffffffff8211610181576101df91600401610186565b9091565b6101ec366101b4565b8101906060818303126101815767ffffffffffffffff81358181116101815783610217918401610321565b9160208101358281116101815784610230918301610321565b9060408101359283116101815761025c946102569361024f9201610321565b9233612095565b33612198565b005b6001600160a01b0381160361018157565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b61026f565b6080810190811067ffffffffffffffff8211176102a157604052565b90601f8019910116810190811067ffffffffffffffff8211176102a157604052565b60405190610160820182811067ffffffffffffffff8211176102a157604052565b67ffffffffffffffff81116102a157601f01601f191660200190565b81601f820112156101815780359061033882610305565b9261034660405194856102c2565b8284526020838301011161018157816000926020809301838601378301015290565b34610181576080366003190112610181576004356103858161025e565b67ffffffffffffffff602435818111610181576103a6903690600401610321565b91604435828111610181576103bf903690600401610321565b92606435838111610181576103d8903690600401610321565b926000946001600160a01b038416865261040960208092888252604089208260405194838680955193849201610635565b8201908152030190209280519283116102a1576104308361042a8654610695565b86610e22565b81601f84116001146104915750918061047e94926104839796948992610486575b50508160011b916000199060031b1c19161790556001600160a01b03166000526001602052604060002090565b610e76565b80f35b015190503880610451565b9190601f1984166104a786600052602060002090565b9389905b82821061050557505092600192859261048399989661047e9896106104ec575b505050811b0190556001600160a01b03166000526001602052604060002090565b015160001960f88460031b161c191690553880806104cb565b806001869782949787015181550196019401906104ab565b346101815760003660031901126101815760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101815760203660031901126101815760043560ff811681036101815761058a602091611ea9565b60ff60405191168152f35b346101815760a0366003190112610181576105b160243561025e565b6044356105bd8161025e565b60843567ffffffffffffffff8111610181576020916105e36105ed923690600401610321565b9060643590611d8c565b6040519015158152f35b34610181576020366003190112610181576001600160a01b0360043561061c8161025e565b1660005260026020526020604060002054604051908152f35b60005b8381106106485750506000910152565b8181015183820152602001610638565b9061066b60209282815194859201610635565b0190565b602090610689928260405194838680955193849201610635565b82019081520301902090565b90600182811c921680156106c5575b60208310146106af57565b634e487b7160e01b600052602260045260246000fd5b91607f16916106a4565b90600092918054916106e083610695565b9182825260019384811690816000146107425750600114610702575b50505050565b90919394506000526020928360002092846000945b83861061072e5750505050010190388080806106fc565b805485870183015294019385908201610717565b9294505050602093945060ff191683830152151560051b010190388080806106fc565b9060209161077e81518092818552858086019101610635565b601f01601f1916010190565b90602061079b928181520190610765565b90565b34610181576040366003190112610181576004356107bb8161025e565b6024359067ffffffffffffffff8211610181576108306108146020610829936001600160a01b036107f361083c973690600401610321565b91166000526000825260406000208260405194838680955193849201610635565b820190815203019020604051928380926106cf565b03826102c2565b6040519182918261078a565b0390f35b346101815760003660031901126101815760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101815760203660031901126101815760043567ffffffffffffffff8111610181576108c06108bb61083c923690600401610321565b611fb4565b604051918291602083526020830190610765565b6060366003190112610181576004356108ec8161025e565b60443567ffffffffffffffff81116101815760209161091261091c923690600401610186565b91602435906110ca565b604051908152f35b346101815760403660031901126101815761094060043561025e565b60243567ffffffffffffffff811161018157610960903690600401610186565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101815760403660031901126101815767ffffffffffffffff600435818111610181576109d9903690600401610321565b90602435908111610181576020916109f86105ed923690600401610321565b90611ae5565b604051906020820182811067ffffffffffffffff8211176102a15760405260008252565b346101815760003660031901126101815761083c604051610a4281610285565b601281527f576562617574686e2056616c696461746f7200000000000000000000000000006020820152604051918291602083526020830190610765565b610a89366101b4565b8101906040818303126101815767ffffffffffffffff9080358281116101815783610ab5918301610321565b906020810135928311610181576020936105ed936109f89201610321565b610ae7610adf366101b4565b8101906113c9565b906001600160a01b0380931691610b3c610b38610b27610b22610b1d876001600160a01b03166000526001602052604060002090565b610d3a565b611507565b610b32610b226109fe565b90611539565b1590565b610cf557610b9a93610b5860209283808251830101910161145b565b929891610b94610b8f8a8a610b878b610b79604051938492830195866114e7565b03601f1981018352826102c2565b519020610fd0565b611317565b90610fe7565b9684604051988980610baf60009c8d94610658565b039060025afa15610cf05787610bd7610bcb8793835190611047565b60405191828092610658565b039060025afa15610cf057610c2f928492610c11895193610c0b8a6001600160a01b03166000526000602052604060002090565b9061066f565b604051630ae7e17f60e41b815295869485938493916004850161109f565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa918215610cf0578592610cc3575b5050610c725761048391612198565b60405162461bcd60e51b8152602060048201526024808201527f62696e6420656d61696c206661696c65642c20696e76616c6964207369676e616044820152637475726560e01b6064820152608490fd5b610ce29250803d10610ce9575b610cda81836102c2565b81019061108b565b3880610c63565b503d610cd0565b61103b565b60405162461bcd60e51b815260206004820152601760248201527f6163636f756e7420656d61696c206e6f7420656d7074790000000000000000006044820152606490fd5b90610d55610d4e92604051938480926106cf565b03836102c2565b565b34610181576020366003190112610181576001600160a01b03600435610d7c8161025e565b16600052600160205261083c6108296108c06040600020604051928380926106cf565b346101815760203660031901126101815761025c600435610dbf8161025e565b611dee565b346101815760003660031901126101815761083c604051610de481610285565b600581527f302e302e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610765565b90601f8111610e3057505050565b600091825260208220906020601f850160051c83019410610e6c575b601f0160051c01915b828110610e6157505050565b818155600101610e55565b9092508290610e4c565b919091825167ffffffffffffffff81116102a157610e9e81610e988454610695565b84610e22565b602080601f8311600114610eda575081929394600092610ecf575b50508160011b916000199060031b1c1916179055565b015190503880610eb9565b90601f19831695610ef085600052602060002090565b926000905b888210610f2d57505083600195969710610f14575b505050811b019055565b015160001960f88460031b161c19169055388080610f0a565b80600185968294968601518155019501930190610ef5565b9060a0828203126101815767ffffffffffffffff82358181116101815782610f6e918501610321565b9360208401358281116101815783610f87918601610321565b9360408101358381116101815784610fa0918301610321565b9360608201358481116101815781610fb9918401610321565b9360808301359081116101815761079b9201610321565b9060405191602083015260208252610d5582610285565b610d5591939293604051948591835161100881602096878088019101610635565b830161101c82518093878085019101610635565b0161102f82518093868085019101610635565b010380855201836102c2565b6040513d6000823e3d90fd5b6040610d559193929381519481611068879351809260208087019101610635565b82019060208201520360208101855201836102c2565b5190811515820361018157565b908160209103126101815761079b9061107e565b916110bc9061079b94928452606060208501526060840190610765565b9160408184039101526106cf565b91906110ee6110e2610b9493610b8f96810190610f45565b96919298909395610fd0565b9360206040519586806111046000998a94610658565b039060025afa15610cf05784611121610bcb602093835190611047565b039060025afa15610cf057611151602092610c0b8651956001600160a01b03166000526000602052604060002090565b926111706040519485938493630ae7e17f60e41b85526004850161109f565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610cf05782916111b7575b5061079b5750600190565b6111cf915060203d8111610ce957610cda81836102c2565b386111ac565b604051906060820182811067ffffffffffffffff8211176102a157604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b918083046008149015171561127157565b611245565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361127157565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361127157565b60001981146112715760010190565b906112ef82610305565b6112fc60405191826102c2565b828152809261130d601f1991610305565b0190602036910137565b8051156113c0576113266111d5565b61134c61133d611336845161125b565b6006900490565b8351600690066113b2576112e5565b91602083019181805101925b838310611366575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301611358565b6113bb906112d6565b6112e5565b5061079b6109fe565b916060838303126101815782356113df8161025e565b9267ffffffffffffffff9260208201358481116101815781611402918401610321565b9360408301359081116101815761079b9201610321565b81601f8201121561018157805161142f81610305565b9261143d60405194856102c2565b818452602082840101116101815761079b9160208085019101610635565b9060a08282031261018157815167ffffffffffffffff908181116101815782611485918501611419565b936020840151828111610181578361149e918601611419565b93604081015183811161018157846114b7918301611419565b93606082015184811161018157816114d0918401611419565b9360808301519081116101815761079b9201611419565b6040906001600160a01b0361079b94931681528160208201520190610765565b6000602060405161151781610285565b828152015260208151916040519261152e84610285565b835201602082015290565b90610b38916115b1565b906020820180921161127157565b906001820180921161127157565b9190820180921161127157565b602003906020821161127157565b60001981019190821161127157565b60ff8111611271576001901b90565b8181039291600013801582851316918412161761127157565b9190825192815184811061166f575b506020808201519481840151906000965b8188106115eb575050505061079b92935051905190611598565b805183519081810361161c575b505061160f61160961161592611543565b93611543565b97611543565b96916115d1565b60001986851061163e575b91821691168181146115f857039750505050505050565b5061166961166461165f61165a8d6116558961156c565b61155f565b611276565b611589565b61157a565b19611627565b9350386115c0565b9080601f830112156101815781519067ffffffffffffffff928383116102a1578260051b604051946020946116ae868401886102c2565b865284808701928401019380851161018157858401925b8584106116d6575050505050505090565b83518381116101815787916116f0848480948a0101611419565b8152019301926116c5565b9060208282031261018157815167ffffffffffffffff928382116101815701906080828203126101815760405192611732846102a6565b825184526020830151818111610181578261174e918501611677565b60208501526040830151818111610181578261176b918501611677565b60408501526060830151908111610181576117869201611419565b606082015290565b9060208282031261018157815167ffffffffffffffff81116101815761079b9201611419565b908082519081815260208091019281808460051b8301019501936000915b8483106117e25750505050505090565b9091929394958480611800600193601f198682030187528a51610765565b98019301930191949392906117d2565b61079b9181518152606061184861183660208501516080602086015260808501906117b4565b604085015184820360408601526117b4565b920151906060818403910152610765565b61186b60409283835283830190611810565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b9160c0838303126101815782519260208101516118be8161025e565b9260408201516118cd8161025e565b9260608301519260808101519267ffffffffffffffff9384811161018157816118f7918401611419565b9360a08301519081116101815761079b9201611419565b90602061079b928181520190611810565b91906040838203126101815782519067ffffffffffffffff9182811161018157840161016081830312610181576119546102e4565b908051848111610181578361196a918301611419565b825260208101518481116101815783611984918301611419565b6020830152604081015184811161018157836119a1918301611419565b6040830152606081015184811161018157836119be918301611419565b6060830152608081015184811161018157836119db918301611419565b608083015260a081015184811161018157836119f8918301611419565b60a083015260c08101518481116101815783611a15918301611419565b60c083015260e08101518481116101815783611a32918301611419565b60e0830152610100808201518581116101815784611a51918401611419565b908301526101208082015194851161018157611a7460209461079b968401611419565b908301526101408091015190820152930161107e565b939061079b9593611abb611ad794611aad611ac99460a08a5260a08a0190610765565b9088820360208a0152610765565b908682036040880152610765565b908482036060860152610765565b916080818403910152610765565b9073__$7b3844f6754ed06fcfc8de6867124591dd$__90604080519063178c5b1b60e31b8252600091828180611b1e876004830161078a565b0381885af4908115610cf0578391611d6a575b508151630793e63d60e51b8152838180611b4e8560048301611859565b0381895af48015610cf057611bb0918591611d50575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb611b9e611b9283611fb4565b9286519182918261078a565b0390a1602080825183010191016118a2565b9a94509792509790936001600160a01b0380951698865163bf38fd3760e01b8152888180611be1866004830161190e565b0381875af48015610cf057611c0292610b38928b92611d2c575b508c611d8c565b611d1f57611c2e959493929160608892015190865180809981946262e82960e51b83526004830161078a565b03915af48015610cf05786958791611cf7575b5015611ceb57906020939291611c7886519460e0818901519801519051978896879586956372d1e02160e11b875260048701611a8a565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610cf0578291611ccd575b5015611cc65750611cc192610dbf9183612095565b600190565b9250505090565b611ce5915060203d8111610ce957610cda81836102c2565b38611cac565b50505050509250505090565b9050611d169195503d8088833e611d0e81836102c2565b81019061191f565b94909438611c41565b5050505050509250505090565b611d499192503d808d833e611d4181836102c2565b81019061178e565b9038611bfb565b611d6491503d8087833e611d4181836102c2565b38611b64565b611d8691503d8085833e611d7e81836102c2565b8101906116fb565b38611b31565b6001600160a01b0316600052600260205260406000205403611de857611dda906001602052611dd4611dce610829610b226040600020604051928380926106cf565b91611507565b906115b1565b611de357600190565b600090565b50600090565b6001600160a01b03168060005260026020526040600020805490611e11826112d6565b9055600181018091116112715760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff821161127157565b60ff6060199116019060ff821161127157565b60ff6040199116019060ff821161127157565b60ff16600a019060ff821161127157565b9060ff8091169116019060ff821161127157565b60f881901b6001600160f81b031916600360fc1b81101580611f7f575b611f7557606160f81b81101580611f67575b611f5557604160f81b8110159081611f46575b50611f355760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b611f4161079b91611e84565b611e71565b602360f91b1015905038611eeb565b50611f6261079b91611e84565b611e5e565b50603360f91b811115611ed8565b5061079b90611e4b565b50603960f81b811115611ec6565b908151811015611f9e570160200190565b634e487b7160e01b600052603260045260246000fd5b80519060019182811661018157611fcc90831c6112e5565b9160009182825b611fdf575b5050505090565b8151831c81101561209057612008611fff611ff9836112a6565b84611f8d565b5160f81c611ea9565b60041b610ff060f0821691168103611271578161207861206861208a9361206261205d61205761204961204361203e8d9b6112a6565b611551565b8b611f8d565b516001600160f81b03191690565b60f81c90565b611ea9565b90611e95565b60f81b6001600160f81b03191690565b861a6120848289611f8d565b536112d6565b90611fd3565b611fd8565b906001600160a01b038216928360005260006020526120d760406000206020604051809285516120c88184868a01610635565b82019081520301902054610695565b61212e576108306121299261047e6121237fd102644d5b7d31da8e6f7217f7e7b2eda07e294b7ee2075ffa0d2e2c9c91c314966001600160a01b03166000526000602052604060002090565b8461066f565b0390a2565b60405162461bcd60e51b815260206004820152600d60248201527f6475706c6963617465206b6579000000000000000000000000000000000000006044820152606490fd5b909161218a61079b93604084526040840190610765565b916020818403910152610765565b6121bd9160003381526001906020918083526121c460408320604051978880926106cf565b03876102c2565b338252808352604082209284519267ffffffffffffffff84116102a1576121f5846121ef8754610695565b87610e22565b81601f851160011461226757509280806001600160a01b0397947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db999794612129979361225c575b501b916000199060031b1c19161790555b604051938493169583612173565b86015192503861223d565b601f9493949291921984169061228287600052602060002090565b93905b8282106122ee575050927f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db9795926121299592826001600160a01b039996106122d5575b5050811b01905561224e565b85015160001960f88460031b161c1916905538806122c9565b808785968294968c0151815501950193019061228556fea164736f6c6343000813000a";

type WebauthnValidatorMockConstructorParams =
  | [
      linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidatorMock__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidatorMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidatorMock> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidatorMock>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidatorMock {
    return super.attach(address) as WebauthnValidatorMock;
  }
  override connect(signer: Signer): WebauthnValidatorMock__factory {
    return super.connect(signer) as WebauthnValidatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorMockInterface {
    return new utils.Interface(_abi) as WebauthnValidatorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidatorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WebauthnValidatorMock;
  }
}

export interface WebauthnValidatorMockLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
