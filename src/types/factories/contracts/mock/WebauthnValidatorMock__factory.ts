/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WebauthnValidatorMock,
  WebauthnValidatorMockInterface,
} from "../../../contracts/mock/WebauthnValidatorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISecp256r1",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "contract DkimVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldEmail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newEmail",
        type: "string",
      },
    ],
    name: "EmailChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "NonceIncrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldPk",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newPk",
        type: "bytes",
      },
    ],
    name: "PkChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
    ],
    name: "VerifySubject",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "pub",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fromHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "c",
        type: "uint8",
      },
    ],
    name: "fromHexChar",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "contract ISecp256r1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "increase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dkimHeaders",
        type: "bytes",
      },
    ],
    name: "recoveryEmail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recoveryNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "newPub",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
    ],
    name: "validateParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract DkimVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009357601f611fe738819003918201601f19168301916001600160401b038311848410176100985780849260409485528339810103126100935780516001600160a01b03918282168203610093576020015191821682036100935760805260a052604051611f3890816100af82396080518181816107510152610f7d015260a05181818161061f01526118240152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101375780630c9595561461013257806318154cb51461012d5780632b7ac3f3146101285780632ecb20d31461012357806349bcad0a1461011e57806381b994c1146101195780638abf6077146101145780638e7e34d71461010f5780639356375c1461010a578063971604c6146101055780639ea9bd5914610100578063a17f619c146100fb578063a3f4df7e146100f6578063a4a1edb1146100f1578063cb2da07c146100ec578063eab136a0146100e75763ffa1ad74146100e257600080fd5b610bb2565b610b8b565b610b43565b610af0565b610a92565b610a17565b610994565b610944565b6108f5565b6107d1565b610731565b6106b5565b610677565b610643565b6105ff565b610489565b6101d3565b346101715760203660031901126101715760043563ffffffff60e01b811680910361017157604051631431782f60e31b9091148152602090f35b600080fd5b9181601f840112156101715782359167ffffffffffffffff8311610171576020838186019501011161017157565b6020600319820112610171576004359067ffffffffffffffff8211610171576101cf91600401610176565b9091565b6101dc366101a4565b81016040828203126101715767ffffffffffffffff9180358381116101715782610207918301610442565b9060209081810135908582116101715761024e94610230926102299201610442565b9233611dc9565b6000933385526001808352610255604087206040519687809261085f565b03866103e3565b3386528083526040862092845192831161037f5761027d836102778654610825565b86610c10565b80601f84116001146102ec57509180806102db95937f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db97958a936102e1575b501b916000199060031b1c19161790555b604051918291339583611da4565b0390a280f35b8601519250386102bc565b90601f93929319831661030486600052602060002090565b9289905b8282106103685750509183916102db96947f9dad0421216afba4b6bb0d0250c5e62a626ba6e937e898fefafd92586a1083db9896941061034f575b5050811b0190556102cd565b85015160001960f88460031b161c191690553880610343565b808785968294968c01518155019501930190610308565b610395565b6001600160a01b0381160361017157565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761037f57604052565b6040810190811067ffffffffffffffff82111761037f57604052565b90601f8019910116810190811067ffffffffffffffff82111761037f57604052565b60405190610160820182811067ffffffffffffffff82111761037f57604052565b67ffffffffffffffff811161037f57601f01601f191660200190565b81601f820112156101715780359061045982610426565b9261046760405194856103e3565b8284526020838301011161017157816000926020809301838601378301015290565b34610171576060366003190112610171576004356104a681610384565b67ffffffffffffffff90602435828111610171576104c8903690600401610442565b90604435838111610171576104e1903690600401610442565b916000936001600160a01b038316855260208581526040862092805192831161037f57610512836102778654610825565b81601f84116001146105735750918061056094926105659796948992610568575b50508160011b916000199060031b1c19161790556001600160a01b03166000526001602052604060002090565b610c64565b80f35b015190503880610533565b9190601f19841661058986600052602060002090565b9389905b8282106105e75750509260019285926105659998966105609896106105ce575b505050811b0190556001600160a01b03166000526001602052604060002090565b015160001960f88460031b161c191690553880806105ad565b8060018697829497870151815501960194019061058d565b346101715760003660031901126101715760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101715760203660031901126101715760043560ff811681036101715761066c602091611bb8565b60ff60405191168152f35b34610171576020366003190112610171576001600160a01b0360043561069c81610384565b1660005260026020526020604060002054604051908152f35b346101715760c0366003190112610171576106d1602435610384565b6044356106dd81610384565b67ffffffffffffffff608435818111610171576106fe903690600401610442565b5060a4359081116101715760209161071d610727923690600401610442565b9060643590611930565b6040519015158152f35b346101715760003660031901126101715760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b60005b8381106107885750506000910152565b8181015183820152602001610778565b906020916107b181518092818552858086019101610775565b601f01601f1916010190565b9060206107ce928181520190610798565b90565b346101715760203660031901126101715760043567ffffffffffffffff81116101715761080d610808610821923690600401610442565b611cc3565b604051918291602083526020830190610798565b0390f35b90600182811c92168015610855575b602083101461083f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610834565b906000929180549161087083610825565b9182825260019384811690816000146108d25750600114610892575b50505050565b90919394506000526020928360002092846000945b8386106108be57505050500101903880808061088c565b8054858701830152940193859082016108a7565b9294505050602093945060ff191683830152151560051b0101903880808061088c565b34610171576020366003190112610171576001600160a01b0360043561091a81610384565b16600052600060205261082161093d61080d60406000206040519283809261085f565b03826103e3565b60603660031901126101715760043561095c81610384565b60443567ffffffffffffffff81116101715760209161098261098c923690600401610176565b9160243590610eb9565b604051908152f35b34610171576040366003190112610171576109b0600435610384565b60243567ffffffffffffffff8111610171576109d0903690600401610176565b505060405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606490fd5b346101715760403660031901126101715767ffffffffffffffff60043581811161017157610a49903690600401610442565b9060243590811161017157602091610a68610727923690600401610442565b9061168c565b604051906020820182811067ffffffffffffffff82111761037f5760405260008252565b3461017157600036600319011261017157610821604051610ab2816103c7565b601281527f576562617574686e2056616c696461746f7200000000000000000000000000006020820152604051918291602083526020830190610798565b610af9366101a4565b8101906040818303126101715767ffffffffffffffff9080358281116101715783610b25918301610442565b9060208101359283116101715760209361072793610a689201610442565b34610171576020366003190112610171576001600160a01b03600435610b6881610384565b16600052600160205261082161093d61080d60406000206040519283809261085f565b3461017157602036600319011261017157610bb0600435610bab81610384565b611afd565b005b3461017157600036600319011261017157610821604051610bd2816103c7565b600581527f302e302e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610798565b90601f8111610c1e57505050565b600091825260208220906020601f850160051c83019410610c5a575b601f0160051c01915b828110610c4f57505050565b818155600101610c43565b9092508290610c3a565b919091825167ffffffffffffffff811161037f57610c8c81610c868454610825565b84610c10565b602080601f8311600114610cc8575081929394600092610cbd575b50508160011b916000199060031b1c1916179055565b015190503880610ca7565b90601f19831695610cde85600052602060002090565b926000905b888210610d1b57505083600195969710610d02575b505050811b019055565b015160001960f88460031b161c19169055388080610cf8565b80600185968294968601518155019501930190610ce3565b916080838303126101715767ffffffffffffffff9083358281116101715783610d5d918601610442565b9360208101358381116101715784610d76918301610442565b9360408201358481116101715781610d8f918401610442565b936060830135908111610171576107ce9201610442565b9060405191602083015260208252610dbd826103c7565b565b90610dd260209282815194859201610775565b0190565b610dbd919392936040519485918351610df781602096878088019101610775565b8301610e0b82518093878085019101610775565b01610e1e82518093868085019101610775565b010380855201836103e3565b6040513d6000823e3d90fd5b6040610dbd9193929381519481610e57879351809260208087019101610775565b82019060208201520360208101855201836103e3565b5190811515820361017157565b90816020910312610171576107ce90610e6d565b91610eab906107ce94928452606060208501526060840190610798565b91604081840391015261085f565b91610ee0610ed0610ee692610edb96810190610d33565b939197909295610da6565b61112d565b90610dd6565b926020604051948580610efc6000988994610dbf565b039060025afa15610fe65783610f25610f19602093835190610e36565b60405191828092610dbf565b039060025afa15610fe657602090610f528451936001600160a01b03166000526000602052604060002090565b92610f716040519485938493630ae7e17f60e41b855260048501610e8e565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fe6578291610fb8575b506107ce5750600190565b610fd9915060203d8111610fdf575b610fd181836103e3565b810190610e7a565b38610fad565b503d610fc7565b610e2a565b604051906060820182811067ffffffffffffffff82111761037f57604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b634e487b7160e01b600052601160045260246000fd5b908160031b918083046008149015171561108757565b61105b565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361108757565b908160011b917f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81160361108757565b60001981146110875760010190565b9061110582610426565b61111260405191826103e3565b8281528092611123601f1991610426565b0190602036910137565b8051156111d65761113c610feb565b61116261115361114c8451611071565b6006900490565b8351600690066111c8576110fb565b91602083019181805101925b83831061117c575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530161116e565b6111d1906110ec565b6110fb565b506107ce610a6e565b909291926111ec81610426565b916111fa60405193846103e3565b829482845282820111610171576020610dbd930190610775565b9080601f830112156101715781516107ce926020016111df565b9080601f830112156101715781519067ffffffffffffffff9283831161037f578260051b60405194602094611265868401886103e3565b865284808701928401019380851161017157858401925b85841061128d575050505050505090565b83518381116101715787916112a7848480948a0101611214565b81520193019261127c565b9060208282031261017157815167ffffffffffffffff9283821161017157019060808282031261017157604051926112e9846103ab565b825184526020830151818111610171578261130591850161122e565b60208501526040830151818111610171578261132291850161122e565b604085015260608301519081116101715761133d9201611214565b606082015290565b9060208282031261017157815167ffffffffffffffff8111610171576107ce9201611214565b90815180825260208092019182818360051b85019501936000915b8483106113965750505050505090565b90919293949584806113b083856001950387528a51610798565b9801930193019194939290611386565b6107ce918151815260606113f86113e6602085015160806020860152608085019061136b565b6040850151848203604086015261136b565b920151906060818403910152610798565b61141b604092838352838301906113c0565b906020818303910152600781527f7375626a6563740000000000000000000000000000000000000000000000000060208201520190565b919060a08382031261017157825192602081015161146f81610384565b92604082015161147e81610384565b9260608301519260808101519067ffffffffffffffff821161017157019080601f830112156101715781516107ce926020016111df565b9060206107ce9281815201906113c0565b91906040838203126101715782519067ffffffffffffffff9182811161017157840161016081830312610171576114fb610405565b9080518481116101715783611511918301611214565b82526020810151848111610171578361152b918301611214565b602083015260408101518481116101715783611548918301611214565b604083015260608101518481116101715783611565918301611214565b606083015260808101518481116101715783611582918301611214565b608083015260a0810151848111610171578361159f918301611214565b60a083015260c081015184811161017157836115bc918301611214565b60c083015260e081015184811161017157836115d9918301611214565b60e08301526101008082015185811161017157846115f8918401611214565b90830152610120808201519485116101715761161b6020946107ce968401611214565b9083015261014080910151908201529301610e6d565b93906107ce959361166261167e946116546116709460a08a5260a08a0190610798565b9088820360208a0152610798565b908682036040880152610798565b908482036060860152610798565b916080818403910152610798565b6040805163178c5b1b60e31b815273__$7b3844f6754ed06fcfc8de6867124591dd$__93916000918281806116c487600483016107bd565b0381895af4908115610fe657839161190e575b508151630793e63d60e51b81528381806116f48560048301611409565b03818a5af48015610fe6576117569185916118f4575b507f183477d48e3355178853eb879f3a63553ebe20514995710040a2dc4d661ba7cb61174461173883611cc3565b928651918291826107bd565b0390a160208082518301019101611452565b989350969150926001600160a01b0380941696855163bf38fd3760e01b815287818c818061178788600483016114b5565b03915af48015610fe6576117ab926117a7928a926118d0575b508a611930565b1590565b6118c457948096979860606117d697015190865180809981946262e82960e51b8352600483016107bd565b03915af48015610fe6578695879161189c575b50156118915790602093929161182086519460e0818901519801519051978896879586956372d1e02160e11b875260048701611631565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa908115610fe6578291611873575b501561186d5750610bab6118689282611dc9565b600190565b91505090565b61188b915060203d8111610fdf57610fd181836103e3565b38611854565b505050505091505090565b90506118bb9195503d8088833e6118b381836103e3565b8101906114c6565b949094386117e9565b50505050509250505090565b6118ed9192503d808c833e6118e581836103e3565b810190611345565b90386117a0565b61190891503d8087833e6118e581836103e3565b3861170a565b61192a91503d8085833e61192281836103e3565b8101906112b2565b386116d7565b6001600160a01b03166000526002602052604060002054036119915761198390600160205261197d61197761093d61197260406000206040519283809261085f565b611997565b91611997565b90611a37565b61198c57600190565b600090565b50600090565b600060206040516119a7816103c7565b82815201526020815191604051926119be846103c7565b835201602082015290565b906020820180921161108757565b906001820180921161108757565b9190820180921161108757565b602003906020821161108757565b60001981019190821161108757565b60ff8111611087576001901b90565b8181039291600013801582851316918412161761108757565b91908251928151848110611af5575b506020808201519481840151906000965b818810611a7157505050506107ce92935051905190611a1e565b8051835190818103611aa2575b5050611a95611a8f611a9b926119c9565b936119c9565b976119c9565b9691611a57565b600019868510611ac4575b9182169116818114611a7e57039750505050505050565b50611aef611aea611ae5611ae08d611adb896119f2565b6119e5565b61108c565b611a0f565b611a00565b19611aad565b935038611a46565b6001600160a01b03168060005260026020526040600020805490611b20826110ec565b9055600181018091116110875760207f75369643b7567139cdd0c8adb97768e49077d26f1d190c55a73ca03895db720f91604051908152a2565b60ff602f199116019060ff821161108757565b60ff6060199116019060ff821161108757565b60ff6040199116019060ff821161108757565b60ff16600a019060ff821161108757565b9060ff8091169116019060ff821161108757565b60f881901b6001600160f81b031916600360fc1b81101580611c8e575b611c8457606160f81b81101580611c76575b611c6457604160f81b8110159081611c55575b50611c445760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642068657820737472696e6700000000000000000000000000006044820152606490fd5b611c506107ce91611b93565b611b80565b602360f91b1015905038611bfa565b50611c716107ce91611b93565b611b6d565b50603360f91b811115611be7565b506107ce90611b5a565b50603960f81b811115611bd5565b908151811015611cad570160200190565b634e487b7160e01b600052603260045260246000fd5b80519060019182811661017157611cdb90831c6110fb565b9160009182825b611cee575b5050505090565b8151831c811015611d9f57611d17611d0e611d08836110bc565b84611c9c565b5160f81c611bb8565b60041b610ff060f08216911681036110875781611d87611d77611d9993611d71611d6c611d66611d58611d52611d4d8d9b6110bc565b6119d7565b8b611c9c565b516001600160f81b03191690565b60f81c90565b611bb8565b90611ba4565b60f81b6001600160f81b03191690565b861a611d938289611c9c565b536110ec565b90611ce2565b611ce7565b9091611dbb6107ce93604084526040840190610798565b916020818403910152610798565b61024e916000338152602090808252611deb604082206040519687809261085f565b338152808252604081209183519167ffffffffffffffff831161037f57611e16836102778654610825565b81601f8411600114611e8e57509282611e7e936001600160a01b0396937f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066989691611e83575b508160011b916000199060031b1c19161790555b604051938493169583611da4565b0390a2565b905083015138611e5c565b601f92919219841690611ea686600052602060002090565b93905b828210611f13575050836001600160a01b0396937f49a125229beaa1b288f0f807170a37c7a131925683b0250b113db84181bfb066989693611e7e9660019410611efa575b5050811b019055611e70565b85015160001960f88460031b161c191690553880611eee565b80600185968294968b01518155019501930190611ea956fea164736f6c6343000813000a";

type WebauthnValidatorMockConstructorParams =
  | [
      linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebauthnValidatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WebauthnValidatorMock__factory extends ContractFactory {
  constructor(...args: WebauthnValidatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WebauthnValidatorMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WebauthnValidatorMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7b3844f6754ed06fcfc8de6867124591dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DkimDecoder.sol:DkimDecoder"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): Promise<WebauthnValidatorMock> {
    return super.deploy(
      _impl,
      _verifier,
      overrides || {}
    ) as Promise<WebauthnValidatorMock>;
  }
  override getDeployTransaction(
    _impl: string,
    _verifier: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, _verifier, overrides || {});
  }
  override attach(address: string): WebauthnValidatorMock {
    return super.attach(address) as WebauthnValidatorMock;
  }
  override connect(signer: Signer): WebauthnValidatorMock__factory {
    return super.connect(signer) as WebauthnValidatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebauthnValidatorMockInterface {
    return new utils.Interface(_abi) as WebauthnValidatorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebauthnValidatorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WebauthnValidatorMock;
  }
}

export interface WebauthnValidatorMockLibraryAddresses {
  ["contracts/libraries/DkimDecoder.sol:DkimDecoder"]: string;
}
