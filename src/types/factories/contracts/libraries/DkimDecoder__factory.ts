/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DkimDecoder,
  DkimDecoderInterface,
} from "../../../contracts/libraries/DkimDecoder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "len",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "name",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "value",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
        ],
        internalType: "struct DkimDecoder.Headers",
        name: "headers",
        type: "tuple",
      },
    ],
    name: "getFromHeader",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "len",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "name",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "value",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
        ],
        internalType: "struct DkimDecoder.Headers",
        name: "headers",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "headerName",
        type: "string",
      },
    ],
    name: "getHeader",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "all",
        type: "string",
      },
    ],
    name: "parse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "len",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "name",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "value",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
        ],
        internalType: "struct DkimDecoder.Headers",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "signature",
        type: "string",
      },
    ],
    name: "parseSigTags",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "d",
            type: "string",
          },
          {
            internalType: "string",
            name: "i",
            type: "string",
          },
          {
            internalType: "string",
            name: "s",
            type: "string",
          },
          {
            internalType: "string",
            name: "b",
            type: "string",
          },
          {
            internalType: "string",
            name: "bh",
            type: "string",
          },
          {
            internalType: "string",
            name: "cHeader",
            type: "string",
          },
          {
            internalType: "string",
            name: "cBody",
            type: "string",
          },
          {
            internalType: "string",
            name: "aHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "aKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "h",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "l",
            type: "uint256",
          },
        ],
        internalType: "struct DkimDecoder.SigTags",
        name: "sigTags",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576116839081610020823930815050f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630c5d052014610057578063bc62d8d814610052578063bf38fd371461004d5763f27cc7a01461004857600080fd5b610669565b6105f9565b6103af565b61018461006b6100663661028c565b610a6c565b90604051928392604084528251610172610093610160928360408901526101a08801906102ba565b9161010d6100f96100e56100d16100bd60208b015197603f19988d60608b828503019101526102ba565b60408b01518c8203890160808e01526102ba565b60608a0151878c83030160a08d01526102ba565b6080890151868b83030160c08c01526102ba565b60a0880151858a83030160e08b01526102ba565b9261012960c08801519461010095838b830301878c01526102ba565b9161016061014960e08a015194610120958c8787828503019101526102ba565b958901519561014096848c830301888d01526102ba565b928801519189840301908901526102ba565b93015161018085015215156020840152565b0390f35b634e487b7160e01b600052604160045260246000fd5b604051906080820182811067ffffffffffffffff8211176101be57604052565b610188565b604051906040820182811067ffffffffffffffff8211176101be57604052565b604051906020820182811067ffffffffffffffff8211176101be57604052565b6040519190601f01601f1916820167ffffffffffffffff8111838210176101be57604052565b67ffffffffffffffff81116101be57601f01601f191660200190565b81601f820112156102875780359061026461025f83610229565b610203565b928284526020838301011161028757816000926020809301838601378301015290565b600080fd5b6020600319820112610287576004359067ffffffffffffffff8211610287576102b791600401610245565b90565b919082519283825260005b8481106102e6575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016102c5565b908082519081815260208091019281808460051b8301019501936000915b8483106103285750505050505090565b9091929394958480610346600193601f198682030187528a516102ba565b9801930193019194939290610318565b906102b791602081528151602082015261037f60208301516080604084015260a08301906102fa565b906080606061039f604086015194601f19958686830301848701526102fa565b94015192828503019101526102ba565b6103b83661028c565b6103c06106bc565b506103d16103cc6106ee565b611147565b906103dd6103cc610708565b6103f16103eb6103cc610721565b92611147565b916103fa610756565b610402610756565b9061040b61019e565b956000875260208701918252604087019283526104266106df565b95606088019687526000602061043a6101c3565b82815201526000602061044b6101c3565b82815201525b8051156104f25761046a61046583836113ba565b611171565b61047487826113ba565b61047e8782611288565b610493575061048c9061119c565b8752610451565b80516104a1575b5050610451565b6104de916104c96104b46104cf9361119c565b87518d51916104c3838361079b565b5261079b565b5061119c565b85518a51916104c3838361079b565b506104e988516107db565b8852388061049a565b604051806101848a82610356565b81601f820112156102875780359167ffffffffffffffff918284116101be578360051b6020938480610533818501610203565b8098815201928401019380851161028757858401925b85841061055a575050505050505090565b8335838111610287578791610574848480948a0101610245565b815201930192610549565b9190916080818403126102875761059461019e565b813581529267ffffffffffffffff602083013581811161028757826105ba918501610500565b6020860152604083013581811161028757826105d7918501610500565b60408601526060830135908111610287576105f29201610245565b6060830152565b60203660031901126102875760043567ffffffffffffffff8111610287576106556106506103cc61063161018494369060040161057f565b6106396101c3565b90600482526366726f6d60e01b6020830152610df1565b6110c4565b6040519182916020835260208301906102ba565b60403660031901126102875767ffffffffffffffff6004358181116102875761069690369060040161057f565b9060243590811161028757610184916106b6610655923690600401610245565b90610df1565b6106c461019e565b90600082526060602083015260606040830152606080830152565b6106e76101e3565b9060008252565b6106f66101c3565b6002815261068560f11b602082015290565b6107106101c3565b9060018252601d60f91b6020830152565b6107296101c3565b90600e82527f646b696d2d7369676e61747572650000000000000000000000000000000000006020830152565b60405190610a20820182811067ffffffffffffffff8211176101be57604052605082528160005b610a00811061078a575050565b80606060208093850101520161077d565b80518210156107af5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60001981146107ea5760010190565b6107c5565b60405190610160820182811067ffffffffffffffff8211176101be57604052600061014083606080825280602083015280604083015280808301528060808301528060a08301528060c08301528060e0830152806101008301526101208201520152565b61085b6101c3565b9060018252603b60f81b6020830152565b6108746101c3565b9060018252603d60f81b6020830152565b61088d6101c3565b9060018252603b60f91b6020830152565b6108a66101c3565b9060018252603160f81b6020830152565b6108bf6101c3565b9060018252601960fa1b6020830152565b6108d86101c3565b9060018252606960f81b6020830152565b6108f16101c3565b9060018252607360f81b6020830152565b61090a6101c3565b9060018252606360f81b6020830152565b6109236101c3565b9060018252606160f81b6020830152565b61093c6101c3565b9060028252610c4d60f31b6020830152565b6109566101c3565b9060018252600d60fb1b6020830152565b61096f6101c3565b9060018252603160f91b6020830152565b6109886101c3565b9060018252601b60fa1b6020830152565b6109a16101c3565b9060018252602d60f81b6020830152565b6109ba6101c3565b90600682527f73686132353600000000000000000000000000000000000000000000000000006020830152565b6109ef6101c3565b9060048252637368613160e01b6020830152565b610a0b6101c3565b90600382526272736160e81b6020830152565b610a266101c3565b9060018252602f60f81b6020830152565b610a3f6101c3565b90600682527f73696d706c6500000000000000000000000000000000000000000000000000006020830152565b610a746107ef565b90610a806103cc610853565b610a8e6103eb6103cc61086c565b805115610da057610a9f82826113ba565b610aba610ab4610aaf86846113ba565b610f16565b91610f16565b90610acf610ac96103cc610885565b82611256565b80610d83575b15610ae557505050505090600090565b610af3610ac96103cc6108b7565b15610b095750610b029061119c565b8452610a8e565b610b17610ac96103cc6108d0565b15610b305750610b269061119c565b6020850152610a8e565b610b3e610ac96103cc6108e9565b15610b575750610b4d9061119c565b6040850152610a8e565b610b65610ac96103cc610902565b15610bee57508051610b915750610b7a610a37565b60a0850152610b87610a37565b60c0850152610a8e565b610bbb90610bb1610bac610ba66103cc610a1e565b836113ba565b61119c565b60a087015261119c565b610bd3610bce60c0870192808452611147565b511590565b610bde575b50610a8e565b610be6610a37565b905238610bd8565b610bfc610ac96103cc61091b565b15610cd75750610c2a610c1c610bac610c166103cc610999565b846113ba565b91610100928388015261119c565b610c3d610bce60e09280848a0152611147565b610ccc578501610c68610c64610c538351611147565b610c5e6103cc6109b2565b90611256565b1590565b9081610ca9575b50610c9f57610c64610c86610c9192870151611147565b610c5e6103cc610a03565b15610a8e5750505090600090565b5050505090600090565b610cc69150610cbb610c649151611147565b610c5e6103cc6109e7565b38610c6f565b505050505090600090565b610ce5610ac96103cc610934565b15610cfe5750610cf49061119c565b6080850152610a8e565b610d0c610ac96103cc61094e565b15610d265750610d1b9061119c565b610120850152610a8e565b610d34610ac96103cc610967565b15610d4d5750610d439061119c565b6060850152610a8e565b610d5c90610c5e6103cc610980565b610d665750610a8e565b610d72610d779161119c565b61104a565b61014085015238610bd8565b50610d9b610c64610d956103cc61089e565b84611256565b610ad5565b50505060208101610db4610bce8251611147565b15610dc1575b5090600190565b610c64610dd1610de19251611147565b610ddb8451611147565b9061137e565b610deb5738610dba565b90600090565b60005b8151811015610e4c57610e26610e17610e1183602086015161079b565b51611147565b610e2085611147565b90611288565b15610e3957610e34906107db565b610df4565b90610e4892506040015161079b565b5190565b505050610e576101e3565b6000815290565b610e666101c3565b906000825260006020830152565b610e7c6101c3565b9060018252600160fd1b6020830152565b610e956101c3565b60018152600960f81b602082015290565b6001198101919082116107ea57565b6000198101919082116107ea57565b60200390602082116107ea57565b919082039182116107ea57565b90600282018092116107ea57565b90600182018092116107ea57565b90602082018092116107ea57565b919082018092116107ea57565b90610f1f610e5e565b50610f2b6103cc610e74565b610f366103cc610e8d565b90610f426103cc6106ee565b610f4c8186611349565b611000575b610f5b8286611349565b8015610ff0575b15610f8857610f718551610eb5565b855260208501610f818151610eed565b9052610f51565b90610f96610fa8928661137e565b610fdf575b90505b610fa8818561137e565b8015610fcf575b15610fcb57610fa890610fc28551610eb5565b85529050610f9e565b5050565b50610fda828561137e565b610faf565b610fe98551610ea6565b8552610f9b565b50610ffb8386611349565b610f62565b61100a8551610ea6565b855260208501610f818151610edf565b908160031b917f1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116036107ea57565b9060009160005b8151811015610fcb576020818301015160f81c6030811015806110b9575b611083575b5061107e906107db565b611051565b600a949194918281029281840414901517156107ea57602f199080828101116107ea578201018091116107ea579261107e611074565b50603981111561106f565b6110e26110cf6101c3565b60018152600f60fa1b6020820152611147565b906111016110ee6101c3565b60018152601f60f91b6020820152611147565b61110b8383611550565b80611137575b61112057506102b7915061119c565b816111316102b794610bac946113ba565b506113ba565b506111428183611550565b611111565b600060206111536101c3565b828152015260208151916111656101c3565b92835201602082015290565b6000602061117d6101c3565b8281520152602081519101516111916101c3565b918252602082015290565b8051906111b76111ae61025f84610229565b92808452610229565b601f19906020848101918301368337808401519351919391925b8184101561121a575060001992806111f4575b5050518251821691191617905290565b9080929350039081116107ea5761120d61121291611247565b610eb5565b9038806111e4565b929193845181528181018091116107ea57938181018091116107ea57918381019081116107ea57926111d1565b601f81116107ea576101000a90565b90610c6491611288565b60ff81116107ea576001901b90565b818103929160001380158285131691841216176107ea57565b91908251928151848110611341575b506020808201519481840151906000965b8188106112c257505050506102b79293505190519061126f565b80518351908181036112f3575b50506112e66112e06112ec92610efb565b93610efb565b97610efb565b96916112a8565b600019868510611315575b91821691168181146112cf57039750505050505050565b5061133b61120d6113366113318d61132c89610ec4565b610f09565b61101a565b611260565b196112fe565b935038611297565b80519082518092106113765760208091015192015180831461136e5781902091201490565b505050600190565b505050600090565b908151918151831061137657602001519182018092116107ea57805182039182116107ea5760208101519081831461136e575180912091201490565b91906113c4610e5e565b926113cd610e5e565b508051916113e960208301938451835190602085015192611443565b9083516020870152835182038281116107ea5786528351835181018091116107ea57820361141a5750506000915052565b855192815184018094116107ea5761143661143f948251610ed2565b90525190610f09565b9052565b9192819360008482111561145f575b5050506102b79250610f09565b91939291602082116114f85750600093816114d8575b5184169392919061148f9061148a8484610f09565b610ed2565b84848751165b036114a257505050505090565b9091929394818110156114c9576114b8906107db565b948486511690809594939291611495565b50509091506102b79250610f09565b935061148f6114ef61120d61133661133185610ec4565b19949050611475565b9290809296942092945b61150c8383610ed2565b861161153d5782812084146115335761152761152d91610eed565b956107db565b94611502565b9450505050915090565b5092949150506102b79250388080611452565b61156a90602081519101928351602082519201519261157e565b9051141590565b80156107ea576000190190565b9291909280821115611591575b50505090565b9193929091906020831161162457600094836115fe575b8361148a876115bd9395949551169385610f09565b9181868451165b036115d65750506102b7929350610f09565b9091818111156115f7576115e990611571565b9185835116908092916115c4565b5093505050565b94506115bd8361148a61161961120d61133661133185610ec4565b1997925050506115a8565b9293611639838061163f939594952094610ed2565b84610f09565b838110156116525750505038808061158b565b81812083146116695761166490610eb5565b61163f565b9091506102b79250610f0956fea164736f6c6343000813000a";

type DkimDecoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DkimDecoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DkimDecoder__factory extends ContractFactory {
  constructor(...args: DkimDecoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DkimDecoder> {
    return super.deploy(overrides || {}) as Promise<DkimDecoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DkimDecoder {
    return super.attach(address) as DkimDecoder;
  }
  override connect(signer: Signer): DkimDecoder__factory {
    return super.connect(signer) as DkimDecoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DkimDecoderInterface {
    return new utils.Interface(_abi) as DkimDecoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DkimDecoder {
    return new Contract(address, _abi, signerOrProvider) as DkimDecoder;
  }
}
