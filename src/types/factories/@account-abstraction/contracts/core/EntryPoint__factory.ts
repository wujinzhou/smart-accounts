/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../@account-abstraction/contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000895760016002556101788181016001600160401b038111838210176200007357829162004823833903906000f08015620000675760805260405161479490816200008f8239608051818181610f6101528181612ffb01526132560152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b6100216141df565b005b60003560e01c80630396cb60146101635780630bd28e3b1461015e5780631b2e01b8146101595780631d732756146101545780631fad948c1461014f578063205c28781461014a57806335567e1a146101455780634b1d7cf5146101405780635287ce121461013b57806370a08231146101365780638f41ec5a14610131578063957122ab1461012c5780639b249f6914610127578063a619353114610122578063b760faf91461011d578063bb9fe6bf14610118578063c23a5cea14610113578063d6383f941461010e578063ee219423146101095763fc7e286d0361000e5761157a565b6113d6565b6112b3565b61117c565b61105b565b61103b565b61101b565b610f00565b610d9a565b610d7e565b610d2c565b610c16565b610921565b6108b0565b610790565b6106b7565b61053f565b61036a565b6102d6565b60203660031901126102bb5760043563ffffffff81168082036102bb576102b67fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916101f56101c5336001600160a01b03166000526000602052604060002090565b916101d18115156142d7565b6101ee6101e5600185015463ffffffff1690565b63ffffffff1690565b1115614323565b54926102986001600160701b039461026361021534888460781c16611984565b9661022188151561436f565b61022d818911156143bb565b61024a81610239610471565b941684906001600160701b03169052565b6001602084015287166001600160701b03166040830152565b63ffffffff8316606082015260006080820152610293336001600160a01b03166000526000602052604060002090565b614407565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b602435906001600160c01b03821682036102bb57565b346102bb5760203660031901126102bb576004356001600160c01b03811681036102bb57610324903360005260016020526040600020906001600160c01b0316600052602052604060002090565b61032e8154611b83565b9055005b6001600160a01b038116036102bb57565b6024359061035082610332565b565b60c4359061035082610332565b359061035082610332565b346102bb5760403660031901126102bb5760206103c260043561038c81610332565b6001600160a01b0361039c6102c0565b9116600052600183526040600020906001600160c01b0316600052602052604060002090565b54604051908152f35b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176103fd57604052565b6103cb565b610100810190811067ffffffffffffffff8211176103fd57604052565b67ffffffffffffffff81116103fd57604052565b6060810190811067ffffffffffffffff8211176103fd57604052565b90601f8019910116810190811067ffffffffffffffff8211176103fd57604052565b60405190610350826103e1565b6040519060c0820182811067ffffffffffffffff8211176103fd57604052565b604051906040820182811067ffffffffffffffff8211176103fd57604052565b67ffffffffffffffff81116103fd57601f01601f191660200190565b9291926104e6826104be565b916104f4604051938461044f565b8294818452818301116102bb578281602093846000960137010152565b9181601f840112156102bb5782359167ffffffffffffffff83116102bb57602083818601950101116102bb57565b346102bb576101c03660031901126102bb5767ffffffffffffffff6004358181116102bb57366023820112156102bb576105839036906024816004013591016104da565b90366023190161018081126102bb57610100604051916105a2836103e1565b126102bb576040516105b381610402565b6105bb610343565b815260443560208201526064356040820152608435606082015260a43560808201526105e5610352565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a4359182116102bb5761065992610641610649933690600401610511565b929091611e96565b6040519081529081906020820190565b0390f35b9060406003198301126102bb5760043567ffffffffffffffff928382116102bb57806023830112156102bb5781600401359384116102bb5760248460051b830101116102bb5760240191906024356106b481610332565b90565b346102bb576106c53661065d565b6106d0929192614733565b6106d983611678565b60005b84811061075957506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183915b8583106107295761071f858561174a565b6100216001600255565b90919360019061074f61073d8789876116f7565b61074788866116de565b519088611a90565b019401919061070e565b8061078761078061076e6001948698966116de565b5161077a848a886116f7565b846127ed565b908361240a565b019290926106dc565b346102bb5760403660031901126102bb576004356107ad81610332565b6024359060009133835282602052604083206001600160701b038154169283831161086b5784836001600160a01b0382959361081b84966108016107f587986108689c611972565b6001600160701b031690565b6001600160701b03166001600160701b0319825416179055565b604080516001600160a01b03831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af161086261171a565b5061469b565b80f35b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b346102bb5760403660031901126102bb5760206004356108cf81610332565b6001600160a01b036108df6102c0565b911660005260018252610909816040600020906001600160c01b0316600052602052604060002090565b546040805192901b67ffffffffffffffff1916178152f35b346102bb5761092f3661065d565b610937614733565b6000805b838210610b045761094c9150611678565b7fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000805b848110610a7757505060008093815b8181106109bb5761071f868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a261174a565b610a126109c982848a611b92565b6109e76109db6109db60208401611bea565b6001600160a01b031690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280611bb4565b906000915b808310610a2f57505050610a2a90611b83565b610984565b90919497610a6a610a64610a7092610a5e8c8b610a5782610a518e8b8d6116f7565b926116de565b5191611a90565b90611984565b99611b83565b95611b83565b9190610a17565b610a82818688611b92565b6020610a9a610a918380611bb4565b92909301611bea565b916001600160a01b0360009316905b828410610ac25750505050610abd90611b83565b610975565b90919294610a6a81610af785610af0610ade610afc968d6116de565b51610aea8c8b8a6116f7565b856127ed565b908b612583565b611b83565b929190610aa9565b610b0f828587611b92565b90610b1a8280611bb4565b92610b2a6109db60208301611bea565b916001600160a01b038316610b426001821415611bf4565b610b63575b505050610b5d91610b5791611984565b91611b83565b9061093b565b909592610b7c60409996939998959897888101906117fc565b92908a3b156102bb5789938b918a51938492839263e3563a4f60e01b845260049e8f850193610baa94611d4a565b03815a93600094fa9081610bfd575b50610be757865163086a9f7560e41b81526001600160a01b038a16818a0190815281906020010390fd5b0390fd5b9497509295509093509181610b57610b5d610b47565b80610c0a610c109261041f565b80610d73565b38610bb9565b346102bb5760203660031901126102bb576106596001600160a01b03600435610c3e81610332565b608060409283928351610c50816103e1565b600093818580935282602082015282878201528260608201520152168152806020522090610cd865ffffffffffff6001835194610c8c866103e1565b80546001600160701b038082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956001600160701b03808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b346102bb5760203660031901126102bb576001600160a01b03600435610d5181610332565b16600052600060205260206001600160701b0360406000205416604051908152f35b60009103126102bb57565b346102bb5760003660031901126102bb57602060405160018152f35b346102bb5760603660031901126102bb57600467ffffffffffffffff81358181116102bb57610dcc9036908401610511565b905060243591610ddb83610332565b6044359081116102bb57610df29036908501610511565b929091159081610ef6575b50610ea9576014821015610e33575b610be38360405191829162461bcd60e51b8352820160409060208152600060208201520190565b610e43610e4f92610e49926120e7565b906120f5565b60601c90565b3b15610e5c573880610e0c565b610be39060405191829162461bcd60e51b8352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b610be38360405191829162461bcd60e51b8352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b1538610dfd565b346102bb5760203660031901126102bb5760043567ffffffffffffffff81116102bb57610f31903690600401610511565b604051632b870d1b60e11b8152918291610f4e916004840161226b565b036020826001600160a01b0392816000857f0000000000000000000000000000000000000000000000000000000000000000165af1908115610fdc57602492600092610fac575b50604051633653dc0360e11b815291166004820152fd5b610fce91925060203d8111610fd5575b610fc6818361044f565b810190612256565b9038610f95565b503d610fbc565b611950565b90816101609103126102bb5790565b60206003198201126102bb576004359067ffffffffffffffff82116102bb576106b491600401610fe1565b346102bb57602061103361102e36610ff0565b611fb1565b604051908152f35b60203660031901126102bb5761002160043561105681610332565b61427f565b346102bb57600080600319360112611179573381528060205260408120600181019063ffffffff825416908115611134576110e16110bb6110f9936110ad6110a8855460ff9060701c1690565b614505565b65ffffffffffff4216614551565b845469ffffffffffff000000001916602082901b69ffffffffffff000000001617909455565b80546eff000000000000000000000000000019169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b60405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152606490fd5b80fd5b346102bb5760203660031901126102bb5760043561119981610332565b6108686001600160a01b036111c1336001600160a01b03166000526000602052604060002090565b9261125d6111dd6107f586546001600160701b039060781c1690565b946111e986151561456b565b6112356001820161122265ffffffffffff61120e835465ffffffffffff9060201c1690565b1661121a8115156145b7565b421015614603565b805469ffffffffffffffffffff19169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b604080516001600160a01b03831681526020810186905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080809581948294165af16112ad61171a565b5061464f565b346102bb5760603660031901126102bb5767ffffffffffffffff6004358181116102bb576112e5903690600401610fe1565b602435916112f283610332565b6044359081116102bb5761130d610be3913690600401610511565b611315611615565b61131e8561233f565b61133161132b8287612648565b906140a7565b9461134182600092438452611991565b9643825281936060956001600160a01b0383166113a2575b505050506080015193611388604061137a602084015165ffffffffffff1690565b92015165ffffffffffff1690565b90604051968796630116f59360e71b885260048801611ddf565b839550839496506113bc6040949293945180948193611dd1565b03925af19060806113cb61171a565b929190388080611359565b346102bb576113e436610ff0565b6113ec611615565b6113f58261233f565b6113ff8183612648565b825160a0015191939161141f906001600160a01b031661419e565b61419e565b9061143661141a85516001600160a01b0390511690565b9461143f6120bd565b5061146e611452604095868101906117fc565b906000601483106115725750610e4361141a92610e49926120e7565b91611478916140a7565b80516001600160a01b0316906001600160a01b038216600181149160808801519787810151918860208201516114b39065ffffffffffff1690565b91015165ffffffffffff169160600151926114cc61047e565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a088015215159081611569575b506115245750610be3925194859463e0cff05f60e01b8652600486016121fc565b9190610be3936115338461419e565b61154d61153e61049e565b6001600160a01b039096168652565b602085015251633ebb2d3960e21b815295869560048701612177565b90501538611503565b91505061419e565b346102bb5760203660031901126102bb576001600160a01b0360043561159f81610332565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926001600160701b0390818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b67ffffffffffffffff81116103fd5760051b60200190565b60405190611622826103e1565b60405160808361163183610402565b60009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b90611682826115fd565b61168f604051918261044f565b82815280926116a0601f19916115fd565b019060005b8281106116b157505050565b6020906116bc611615565b828285010152016116a5565b634e487b7160e01b600052603260045260246000fd5b80518210156116f25760209160051b010190565b6116c8565b91908110156116f25760051b8101359061015e19813603018212156102bb570190565b3d15611745573d9061172b826104be565b91611739604051938461044f565b82523d6000602084013e565b606090565b6001600160a01b031680156117b757600080809381935af161176a61171a565b501561177257565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b903590601e19813603018212156102bb570180359067ffffffffffffffff82116102bb576020019181360383136102bb57565b908160209103126102bb575190565b908060209392818452848401376000828201840152601f01601f1916010190565b60005b8381106118725750506000910152565b8181015183820152602001611862565b9060209161189b8151809281855285808601910161185f565b601f01601f1916010190565b906118c16080916106b496946101c080865285019161183e565b9360e081516001600160a01b0380825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611882565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b9190820391821161197f57565b61195c565b9190820180921161197f57565b905a918160206119aa60608301519360608101906117fc565b906119ca856040519586948594630eb993ab60e11b8652600486016118a7565b03816000305af160009181611a60575b50611a59575060206000803e60005163deaddead60e01b14611a1857611a12611a076106b4945a90611972565b608084015190611984565b916139b7565b60408051631101335b60e11b8152600060048201526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9250505090565b611a8291925060203d8111611a89575b611a7a818361044f565b81019061182f565b90386119da565b503d611a70565b909291925a93806020611aac60608301519460608101906117fc565b90611acc866040519586948594630eb993ab60e11b8652600486016118a7565b03816000305af160009181611b63575b50611b5c575060206000803e60005163deaddead60e01b14611b1b57611b15611b0a6106b495965a90611972565b608083015190611984565b92613bf9565b60408051631101335b60e11b8152600481018590526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9450505050565b611b7c91925060203d8111611a8957611a7a818361044f565b9038611adc565b600019811461197f5760010190565b91908110156116f25760051b81013590605e19813603018212156102bb570190565b903590601e19813603018212156102bb570180359067ffffffffffffffff82116102bb57602001918160051b360383136102bb57565b356106b481610332565b15611bfb57565b60405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606490fd5b9035601e19823603018112156102bb57016020813591019167ffffffffffffffff82116102bb5781360383136102bb57565b6106b491611c9081611c838461035f565b6001600160a01b03169052565b60208201356020820152611d2b611cdc611cc1611cb06040860186611c40565b61016080604088015286019161183e565b611cce6060860186611c40565b90858303606087015261183e565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101008085013590840152610120611d1e81860186611c40565b918584039086015261183e565b91611d3c6101409182810190611c40565b92909181850391015261183e565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310611d8d575050505050508460206106b49596850391015261183e565b909192939497605f198b8203018552883561015e1984360301811215611dcd5760019184611dbb9201611c72565b98602090810196950193019190611d6e565b8280fd5b908092918237016000815290565b9290936106b496959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611882565b15611e2257565b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b9060406106b492600081528160208201520190611882565b6040906106b4939281528160208201520190611882565b909291925a93611ea7303314611e1b565b8151946040860151955a611388606083015189010111611fa0576106b4966000958051611eee575b50505090611ee8915a90036080840151019436916104da565b91613dde565b611f1091611f0c91611f0785516001600160a01b031690565b6146f2565b1590565b611f1c575b8080611ecf565b611ee892919450611f2b614704565b908151611f3f575b50506001939091611f15565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2016001600160a01b03602087015192611f966020611f8483516001600160a01b031690565b92015195604051938493169683611e7f565b0390a33880611f33565b63deaddead60e01b60005260206000fd5b611fc7611fc160408301836117fc565b906146e7565b90611fd8611fc160608301836117fc565b90612074611fed611fc16101208401846117fc565b60405194859360208501956101008201359260e08301359260c08101359260a0820135926080830135926001600160a01b0360208201359135168c9693909a999895926101209895926001600160a01b036101408a019d168952602089015260408801526060870152608086015260a085015260c084015260e08301526101008201520152565b0391612088601f199384810183528261044f565b519020604080516020810192835230918101919091524660608201526080928301815290916120b7908261044f565b51902090565b604051906040820182811067ffffffffffffffff8211176103fd5760405260006020838281520152565b906014116102bb5790601490565b6bffffffffffffffffffffffff19903581811693926014811061211757505050565b60140360031b82901b16169150565b9060c060a06106b493805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611882565b92946121d8610350956121c66101009599986121b46121a0602097610140808c528b0190612126565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b6001600160a01b0381511660e0850152015191019060208091805184520151910152565b6122456103509461223361221e60a0959998969960e0865260e0860190612126565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b908160209103126102bb57516106b481610332565b9160206106b493818152019161183e565b9061229e6001600160a01b03916106b49795969460608552606085019161183e565b94166020820152604081850391015261183e565b60009060033d116122bf57565b905060046000803e60005160e01c90565b600060443d106106b457604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761232e57818401948551938411612336573d8501016020848701011161232e57506106b49291016020019061044f565b949350505050565b50949350505050565b61234c60408201826117fc565b61236461235884611bea565b936101208101906117fc565b9290303b156102bb5760009361238f91604051968795869563957122ab60e01b87526004870161227c565b0381305afa90816123f7575b506103505760016123aa6122b2565b6308c379a0146123bb575b610fdc57565b6123c36122d0565b806123cf575b506123b5565b805160009250156123c957604051631101335b60e11b8152908190610be39060048301611e67565b80610c0a6124049261041f565b3861239b565b9190612415906125ad565b6001600160a01b0392918316612534576124e557612432906125ad565b91166124965761243f5750565b60408051631101335b60e11b815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b608482015260a490fd5b60408051631101335b60e11b8152600481018490526024810191909152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018590526024810191909152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152608490fd5b92919061258f906125ad565b90926001600160a01b0380809516911603612534576124e557612432905b80156125f3576125bc90614059565b6001600160a01b0365ffffffffffff8060408401511642119081156125e3575b5091511691565b90506020830151164210386125dc565b50600090600090565b1561260357565b60405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606490fd5b916000915a9381519061265b82826129e0565b61266481611fb1565b60208401526126a26effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e0850135171711156125fc565b6126ab82612a88565b6126b6818584612b3c565b97906126da611f0c6126cf87516001600160a01b031690565b60208801519061414c565b61279e576126e743600052565b6001600160a01b0361270560a060609701516001600160a01b031690565b16612784575b505a810360a0840135106127355760809360c092604087015260608601525a900391013501910152565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b909350816127959297508584613558565b9590923861270b565b60408051631101335b60e11b8152600060048201526024810191909152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152608490fd5b9290916000925a825161280081846129e0565b61280983611fb1565b60208501526128476effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e0870135171711156125fc565b61285081612a88565b61285c8186868b612dc5565b9890612880611f0c61287586516001600160a01b031690565b60208701519061414c565b6129455761288d43600052565b6001600160a01b036128ab60a060609601516001600160a01b031690565b1661292a575b505a840360a0860135106128dd5750604085015260608401526080919060c0905a900391013501910152565b60408051631101335b60e11b815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b9092508161293c929850868685613742565b969091386128b1565b60408051631101335b60e11b8152600481018490526024810191909152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152608490fd5b1561299b57565b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b612a45906129fd6129f082611bea565b6001600160a01b03168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e08401526101208101906117fc565b908115612a7d57612a6f610e49610e438460a094612a6a601461035099981015612994565b6120e7565b6001600160a01b0316910152565b505060a06000910152565b60a08101516001600160a01b031615612abd5760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001612aa0565b612ade60409295949395606083526060830190611c72565b9460208201520152565b90610350602f60405180947f414132332072657665727465643a2000000000000000000000000000000000006020830152612b2c815180926020868601910161185f565b810103600f81018552018361044f565b916000926000925a93612bca6020835193612b5e85516001600160a01b031690565b95612b76612b6f60408301836117fc565b9084612fa6565b60a08601516001600160a01b031690612b8e43600052565b8580936001600160a01b03809416159889612d71575b6060015190860151604051633a871cdd60e01b8152978896879586939060048501612ac6565b03938a1690f1829181612d51575b50612d485750600190612be96122b2565b6308c379a014612d0d575b50612cbe575b612c07575b50505a900391565b612c24906001600160a01b03166000526000602052604060002090565b612c386107f582546001600160701b031690565b808311612c6f57612c68926001600160701b039103166001600160701b03166001600160701b0319825416179055565b3880612bff565b60408051631101335b60e11b8152600060048201526024810191909152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601660448201527f4141323320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b612d156122d0565b9081612d215750612bf4565b610be391612d2f9150612ae8565b604051631101335b60e11b815291829160048301611e67565b9550612bfa9050565b612d6a91925060203d8111611a8957611a7a818361044f565b9038612bd8565b9450612da36107f5612d968c6001600160a01b03166000526000602052604060002090565b546001600160701b031690565b8b811115612dba5750856060835b96915050612ba4565b606087918d03612db1565b90926000936000935a94612e016020835193612de885516001600160a01b031690565b95612b76612df960408301836117fc565b90848c6131fe565b03938a1690f1829181612f86575b50612f7d5750600190612e206122b2565b6308c379a014612f40575b50612ef1575b612e3f575b5050505a900391565b612e5c906001600160a01b03166000526000602052604060002090565b91612e716107f584546001600160701b031690565b90818311612ea4575082546dffffffffffffffffffffffffffff19169190036001600160701b0316179055388080612e36565b60408051631101335b60e11b815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601660448201527f4141323320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b612f486122d0565b9081612f545750612e2b565b8691612f609150612ae8565b604051631101335b60e11b8152918291610be39160048401611e7f565b9650612e319050565b612f9f91925060203d8111611a8957611a7a818361044f565b9038612e0f565b909180612fb257505050565b8151516001600160a01b031692833b6131af57825160600151604051632b870d1b60e11b81529060208280612feb87876004840161226b565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215610fdc5760009261318f575b5080821695861561314057168095036130f1573b156130a257610e49610e437fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93613076936120e7565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a3565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b6131a891925060203d8111610fd557610fc6818361044f565b903861302c565b60408051631101335b60e11b8152600060048201526024810191909152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b9290918161320d575b50505050565b8251516001600160a01b031693843b61341057835160600151604051632b870d1b60e11b8152906020828061324688886004840161226b565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215610fdc576000926133f0575b508082169687156133a15716809603613352573b156133055750610e49610e437fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d936132d2936120e7565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a338808080613207565b60408051631101335b60e11b815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018490526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b61340991925060203d8111610fd557610fc6818361044f565b9038613287565b60408051631101335b60e11b815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b1561346457565b60405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606490fd5b91906040838203126102bb57825167ffffffffffffffff81116102bb5783019080601f830112156102bb578151916134e0836104be565b916134ee604051938461044f565b838352602084830101116102bb5760209261350e9184808501910161185f565b92015190565b90610350602f60405180947f414133332072657665727465643a2000000000000000000000000000000000006020830152612b2c815180926020868601910161185f565b93919260609460009460009380519261358a60a08a8601519561357c88881161345d565b01516001600160a01b031690565b916135a8836001600160a01b03166000526000602052604060002090565b946135bd6107f587546001600160701b031690565b968588106136f3576001600160a01b0360208a98946136008a966001600160701b038b6136209e03166001600160701b03166001600160701b0319825416179055565b0151604051637a32e3bf60e11b8152998a98899788939060048501612ac6565b0395169103f19081839184936136cd575b506136c65750506001906136436122b2565b6308c379a0146136a4575b5061365557565b60408051631101335b60e11b8152600060048201526024810191909152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b6136ac6122d0565b90816136b8575061364e565b610be391612d2f9150613514565b9450925050565b9092506136ec91503d8085833e6136e4818361044f565b8101906134a9565b9138613631565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b91949293909360609560009560009382519061376960a08b8401519361357c84861161345d565b93613787856001600160a01b03166000526000602052604060002090565b61379b6107f582546001600160701b031690565b8781106138aa57926001600160a01b0360208a989693946136008a966001600160701b038d6137e29e9c9a03166001600160701b03166001600160701b0319825416179055565b0395169103f190818391849361388c575b506138845750506001906138056122b2565b6308c379a014613865575b506138185750565b60408051631101335b60e11b815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b61386d6122d0565b90816138795750613810565b612f60925050613514565b955093505050565b9092506138a391503d8085833e6136e4818361044f565b91386137f3565b60408051631101335b60e11b8152600481018c90526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b6003111561390357565b634e487b7160e01b600052602160045260246000fd5b92919061393760409160028652606060208701526060860190611882565b930152565b93929190600381101561390357604091613937918652606060208701526060860190611882565b90610350603660405180947f4141353020706f73744f702072657665727465643a200000000000000000000060208301526139a7815180926020868601910161185f565b810103601681018552018361044f565b929190925a936000918051916139cc83614012565b9260a08101956139e387516001600160a01b031690565b6001600160a01b0393908481169081613b0057505050613a0a82516001600160a01b031690565b985b5a90030193840297604084019089825110613ab1577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94613a566020928c613aac955103906141e8565b015194896020613a7e613a7086516001600160a01b031690565b9a516001600160a01b031690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b9a918051613b10575b5050613a0c565b6060850151600099509091803b15613bf5579189918983613b4a9560405180978196829563a9a2340960e01b84528c029060048401613919565b0393f19081613be2575b50613bdd576001613b636122b2565b6308c379a014613bbe575b613b7a575b3880613b09565b60408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613bc66122d0565b80613bd15750613b6e565b612d2f610be391613963565b613b73565b80610c0a613bef9261041f565b38613b54565b8980fd5b9392915a90600092805190613c0d82614012565b9360a0830196613c2488516001600160a01b031690565b6001600160a01b0395908681169081613ce757505050613c4b84516001600160a01b031690565b915b5a9003019485029860408301908a825110613c9a57507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f949392613a56613aac938c6020945103906141e8565b60408051631101335b60e11b815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b93918051613cf7575b5050613c4d565b606087015160009a509091803b15613dda57918a918a83613d319560405180978196829563a9a2340960e01b84528c029060048401613919565b0393f19081613dc7575b50613dc2576001613d4a6122b2565b6308c379a014613da5575b613d61575b3880613cf0565b60408051631101335b60e11b8152600481018d90526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613dad6122d0565b80613db85750613d55565b612f608d91613963565b613d5a565b80610c0a613dd49261041f565b38613d3b565b8a80fd5b909392915a94805191613df083614012565b9260a0810195613e0787516001600160a01b031690565b6001600160a01b03938185169182613ec857505050613e2d82516001600160a01b031690565b985b5a90030193840297604084019089825110613ab1577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94613e796020928c613aac955103906141e8565b613e82886138f9565b015194896020613e9c613a7086516001600160a01b031690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151613ed8575b5050613e2f565b878402613ee48a6138f9565b60028a14613f48576060860151823b156102bb57613f1e93600080948d6040519788968795869363a9a2340960e01b85526004850161393c565b0393f18015610fdc57613f35575b505b3880613ed1565b80610c0a613f429261041f565b38613f2c565b6060860151823b156102bb57613f7a93600080948d6040519788968795869363a9a2340960e01b85526004850161393c565b0393f19081613fff575b50613ffa576001613f936122b2565b6308c379a014613fe7575b15613f2e5760408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613fef6122d0565b80613bd15750613f9e565b613f2e565b80610c0a61400c9261041f565b38613f84565b60e060c082015191015180821461403657480180821015614031575090565b905090565b5090565b6040519061404782610433565b60006040838281528260208201520152565b61406161403a565b5065ffffffffffff808260a01c1680156140a0575b6040519261408384610433565b6001600160a01b038116845260d01c602084015216604082015290565b5080614076565b6140bc6140c2916140b661403a565b50614059565b91614059565b906001600160a01b039182825116928315614141575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410614139575b50808511614131575b506040519561411f87610433565b16855216602084015216604082015290565b935038614111565b925038614108565b8151811693506140d8565b6001600160a01b0316600052600160205267ffffffffffffffff61418a8260401c6040600020906001600160c01b0316600052602052604060002090565b9182549261419784611b83565b9055161490565b906001600160a01b036141af6120bd565b9216600052600060205263ffffffff600160406000206001600160701b03815460781c1685520154166020830152565b6103503361427f565b6001600160a01b0316600052600060205260406000206001600160701b038082541692830180931161197f5780831161423a5761035092166001600160701b03166001600160701b0319825416179055565b60405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152606490fd5b6001600160a01b039061429234826141e8565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206001600160701b0360406000205416604051908152a2565b156142de57565b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b1561432a57565b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b1561437657565b60405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152606490fd5b156143c257565b60405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152606490fd5b9065ffffffffffff60806001610350946144416001600160701b0386511682906001600160701b03166001600160701b0319825416179055565b602085015115156eff000000000000000000000000000082549160701b16806eff00000000000000000000000000001983161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff60608201511663ffffffff1985541617845501511669ffffffffffff0000000082549160201b169069ffffffffffff000000001916179055565b1561450c57565b60405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152606490fd5b91909165ffffffffffff8080941691160191821161197f57565b1561457257565b60405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152606490fd5b156145be57565b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b1561460a57565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b1561465657565b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b156146a257565b60405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152606490fd5b816040519182372090565b9060009283809360208451940192f190565b3d61080080821161472b575b50604051906020818301016040528082526000602083013e90565b905038614710565b60028054146147425760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea164736f6c6343000813000a608080604052346100165761015c908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100ab5760203660031901126100ab5760043567ffffffffffffffff918282116100ab57366023830112156100ab5781600401359283116100ab5736602484840101116100ab576100a761008084602485016100c4565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b634e487b7160e01b600052604160045260246000fd5b90806014116101455767ffffffffffffffff91601319820183811161014a5760405193600b8401601f19908116603f011685019081118582101761014a5760405280845260208401903684840111610145576020946000600c819682946014880187378301015251923560601c5af190600051911561013f57565b60009150565b600080fd5b6100ae56fea164736f6c6343000813000a";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
